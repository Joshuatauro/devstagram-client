{"version":3,"sources":["Components/Firebase/firebase.js","Components/Context/AuthContext.js","Components/Reusable/Buttons/Buttons.jsx","Components/CreatePost/Create.jsx","Components/Reusable/Post/Post.jsx","Components/Home/Home.jsx","Components/Navbar/Navbar.jsx","Components/SignUp/SignUp.jsx","Components/Context/CommentContext.js","Components/Reusable/Comment/Comment.jsx","Components/SinglePost/PostComments/PostComments.jsx","Components/Reusable/LikeButton/LikeButton.jsx","Components/SinglePost/PostContent/PostContent.jsx","Components/SinglePost/PostForm/PostForm.jsx","Components/SinglePost/SinglePostPage.jsx","Components/Login/Login.jsx","Components/Reusable/SubredditAbout/SubredditAbout.jsx","Components/SingleSubreddit/SingleSubreddit.jsx","Components/PrivateFeed/PrivateFeed.jsx","Components/UserProfile/UserProfileContent/UserProfileContent.jsx","Components/UserProfile/UserProfileSide/UserProfileSide.jsx","Components/UserProfile/UserProfile.jsx","Components/Settings/UserProfileSettings/UserProfileSettings.jsx","Components/Settings/Settings.jsx","App.js","index.js"],"names":["storage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","signUp","email","password","displayName","a","createUserWithEmailAndPassword","userSignedUp","user","updateProfile","alert","message","logIn","signInWithEmailAndPassword","login","logout","signOut","useEffect","onAuthStateChanged","Provider","value","BASE_URL","LinkButton","buttonColor","buttonText","buttonSize","buttonVariant","m","link","history","useHistory","onClick","push","className","ActionButton","CreatePost","toast","useToast","useContext","subreddits","setSubreddits","title","setTitle","content","setContent","selectedSubreddit","setSelectedSubreddit","fileContent","setFileContent","imgProgress","setImgProgress","handleSubmit","e","preventDefault","uid","uploadToStorage","ref","name","put","on","snapshot","progressImgCompleted","bytesTransferred","totalBytes","err","getDownloadURL","imageDownloadURL","subreddit","userName","downloadURL","formatDetails","axios","post","response","data","postID","description","status","duration","isClosable","get","map","fetchSubreddits","variant","size","color","onSubmit","type","required","onChange","target","bg","_hover","_focus","accept","files","borderRadius","to","Post","username","createdAt","img","profileImg","React","setPost","replace","src","moment","fromNow","alt","Home","posts","setPosts","loading","isLoading","postArr","fetchData","height","postid","img_url","profile_url","createdat","Navbar","isMobile","setIsMobile","handleResize","window","innerWidth","addEventListener","icon","mx","opacity","SignUp","setUserName","setEmail","setPassword","isSuccess","console","log","CommentContext","CommentContextProvider","comments","setComments","deleteComment","commentID","delete","filter","comment","comment_id","updateComment","imageURL","formatted","storeComments","commentsArray","addComment","Comment","profileURL","paraContent","setParaContent","isEditing","setIsEditing","s3","photoURL","PostComments","useParams","fetchComments","getComments","LikeButton","didUSerLike","setDidUserLike","numOfLikes","setNumOfLikes","likePost","formattedDetails","dislikePost","fetch","likeArr","likedBy","like","includes","fetchLikes","undefined","SinglePostContent","setSubreddit","setCreatedAt","imgURL","setImgURL","setProfileURL","isOwner","setIsOwner","handleAction","formattedData","details","then","postContent","getPostContent","PostForm","setComment","handleCommentSubmit","commentDetails","parent_postid","formattedComment","SinglePostPage","Login","SubredditAbout","numOfPosts","isFollowing","setIsFollowing","about","setAbout","followSubreddit","unfollowSubreddit","fetchDetails","followed_by","fetchSubredditDetails","SingleSubreddit","setNumOfPosts","length","PrivateFeed","UserProfileContent","getPosts","UserProfileSide","bio","setBio","useDisclosure","isOpen","onOpen","onClose","userData","userDetails","followed_subreddits","fetchUser","placement","colorScheme","backgroundColor","fontFamily","UserProfile","UserProfileSettings","setProfileImg","portfolio","setPortfolio","userProfileData","handleProfileChange","handleSubmitBio","handleSubmitPortfolio","changePortfolio","htmlFor","cursor","transition","id","maxLength","Settings","isFitted","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d857bd1.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport 'firebase/auth'\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCxkufqsXB9CDUdwaDgNwbC1LNHqv-b5dw\",\r\n  authDomain: \"memories-fedd4.firebaseapp.com\",\r\n  projectId: \"memories-fedd4\",\r\n  storageBucket: \"memories-fedd4.appspot.com\",\r\n  messagingSenderId: \"73933300893\",\r\n  appId: \"1:73933300893:web:c7c8247b5683d1d4af2074\",\r\n  measurementId: \"G-5MXCFDHY5H\"\r\n});\r\n\r\nexport const storage = firebase.storage()\r\nexport const auth = firebase.auth()\r\n","import React, { createContext, useState, useEffect } from 'react'\r\nimport { auth } from '../Firebase/firebase'\r\n\r\nexport const AuthContext = createContext()\r\n\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n\r\n  const [currentUser, setCurrentUser] = useState('')\r\n\r\n  const signUp = async(email,password, displayName) => {\r\n    try{\r\n      const userSignedUp = await auth.createUserWithEmailAndPassword(email,password)\r\n      userSignedUp.user.updateProfile(\r\n        {\r\n          displayName\r\n        }\r\n      )\r\n      return userSignedUp\r\n    }\r\n    catch(err){\r\n      alert(err.message)\r\n    }\r\n  }\r\n\r\n  const logIn = async(email,password) => {\r\n    try{\r\n\r\n      const login = await auth.signInWithEmailAndPassword(email,password)\r\n      return login\r\n    } catch(err) {\r\n\r\n      alert(err.message)\r\n    }\r\n  }\r\n\r\n  const logout = async() => {\r\n    auth.signOut()\r\n  }\r\n\r\n  const BASE_URL = 'http://localhost:5000'\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n    })\r\n    return unsubscribe\r\n  }, [])\r\n\r\n\r\n\r\n  return(\r\n    <AuthContext.Provider value={\r\n      {\r\n        currentUser,\r\n        signUp,\r\n        logout,\r\n        logIn,\r\n        BASE_URL\r\n      }\r\n    }>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}","import React from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport './Buttons.css'\r\n\r\nexport const LinkButton = ({buttonColor, buttonText, buttonSize, buttonVariant, m, link}) => {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <button onClick={() => history.push(`/${link}`) } className={`button ${buttonColor} ${m} ${buttonSize} ${buttonVariant} `}>\r\n      {buttonText}\r\n    </button>\r\n  )\r\n}\r\n\r\n\r\nexport const ActionButton = ({buttonColor, buttonText, buttonSize, buttonVariant}) => {\r\n  return(\r\n    <button className={`button ${buttonColor} ${buttonSize} ${buttonVariant}`}>\r\n      {buttonText}\r\n    </button>\r\n  )\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { Progress, Select, Tab, TabList, TabPanel, TabPanels, Tabs, useToast } from '@chakra-ui/react'\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport { ActionButton } from '../Reusable/Buttons/Buttons'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { AiFillFileText } from 'react-icons/ai'\r\nimport { BsImageFill } from 'react-icons/bs'\r\nimport './Create.css'\r\nimport { storage } from '../Firebase/firebase'\r\n\r\nconst CreatePost = () => {\r\n  const history = useHistory()\r\n  const toast = useToast()\r\n  const { currentUser, BASE_URL } = useContext(AuthContext)\r\n\r\n  const [subreddits, setSubreddits] = useState([])\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [selectedSubreddit, setSelectedSubreddit] = useState('All')\r\n\r\n  const [fileContent, setFileContent] = useState()\r\n  const [imgProgress, setImgProgress] = useState()\r\n\r\n\r\n  const handleImgSelect = (e) => {\r\n      if(e.target.files[0]){\r\n        setFileContent(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    if(currentUser.uid){\r\n\r\n      if(fileContent) {\r\n        const uploadToStorage = storage.ref(`posts/${currentUser.displayName}/${fileContent.name}`).put(fileContent)\r\n\r\n        uploadToStorage.on(\r\n          'state_changed',\r\n          (snapshot) => {\r\n            let progressImgCompleted = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            setImgProgress(progressImgCompleted)\r\n          },\r\n          (err) => {\r\n            alert(err.message)\r\n          },\r\n          async() => {\r\n            const imageDownloadURL = await uploadToStorage.snapshot.ref.getDownloadURL()\r\n            const formatDetails = await {\r\n              title,\r\n              content ,\r\n              subreddit: selectedSubreddit,\r\n              userName: currentUser.displayName,\r\n              downloadURL: imageDownloadURL\r\n            }\r\n            const response = await axios.post(`${BASE_URL}/posts/add`, formatDetails)\r\n            history.push(`/post/${response.data.postID}`)\r\n          }\r\n        )\r\n      } else {\r\n        const formatDetails = await {\r\n          title,\r\n          content ,\r\n          subreddit: selectedSubreddit,\r\n          userName: currentUser.displayName,\r\n        }\r\n        \r\n        try{\r\n          const response = await axios.post(`${BASE_URL}/posts/add`, formatDetails)\r\n          history.push(`/post/${response.data.postID}`)\r\n        } catch(err){\r\n          alert('Something went wrong')\r\n        }\r\n      }\r\n\r\n      \r\n\r\n    } else {\r\n      toast({\r\n        title: \"Failed to add post\",\r\n        description: \"You need to create an account to post \",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })\r\n      \r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchSubreddits = async() => {\r\n      const subreddits = await axios.get(`${BASE_URL}/subreddits`)\r\n      setSubreddits(subreddits.data.subreddits.map(subreddit => subreddit.subreddit))\r\n    }\r\n\r\n    fetchSubreddits()\r\n  }, [])\r\n  return (\r\n    <section className=\"create\">\r\n      {currentUser ? (\r\n        <div className=\"create__container\">\r\n\r\n          <div className=\"create__form\">\r\n\r\n\r\n            <Tabs variant='enclosed'size='lg'>\r\n              <TabList>\r\n                <Tab color='#4FD1C5'>\r\n                  <AiFillFileText />\r\n                </Tab>\r\n                <Tab color='#4FD1C5'>\r\n                  <BsImageFill/>\r\n                </Tab>\r\n              </TabList>\r\n              <TabPanels>\r\n                <TabPanel>\r\n                  <form onSubmit={handleSubmit}  className=\"create__form\">\r\n                    <div className=\"create__input\">\r\n                      <input type=\"text\" required value={title} onChange={e => setTitle(e.target.value)}/>\r\n                      <label className=\"create__label\">Title</label>\r\n                    </div>\r\n                    <Select value={selectedSubreddit} onChange={e => setSelectedSubreddit(e.target.value)} variant=\"filled\" bg='#4FD1C5' color=\"black\" _hover={{bg: \"#4FD1C5\"}} _focus={{bg: \"#4FD1C5\"}}>\r\n                      {\r\n                        subreddits.map((subreddit) => {\r\n                          return(\r\n                            <option value={subreddit}>{subreddit}</option>\r\n                          )\r\n                        })\r\n                      }\r\n                    </Select>\r\n                    <div className=\"create__input\">\r\n                      <textarea type=\"text\" required value={content} onChange={e => setContent(e.target.value)}/>\r\n                      <label className=\"create__label\">Text</label>\r\n                    </div>\r\n                    <ActionButton type='submit' buttonText=\"Submit\" buttonVariant=\"filled\" buttonColor=\"blue\" buttonSize=\"md\" />\r\n                    </form>\r\n                </TabPanel>\r\n                \r\n                <TabPanel>\r\n                  <form onSubmit={handleSubmit}  className=\"create__form\">\r\n                    <div className=\"create__input\">\r\n                        <input type=\"text\" required value={title} onChange={e => setTitle(e.target.value)}/>\r\n                        <label className=\"create__label\">Title</label>\r\n                      </div>\r\n                      <Select value={selectedSubreddit} onChange={e => setSelectedSubreddit(e.target.value)} variant=\"filled\" bg='#4FD1C5' color=\"black\" _hover={{bg: \"#4FD1C5\"}} _focus={{bg: \"#4FD1C5\"}}>\r\n                        {\r\n                          subreddits.map((subreddit) => {\r\n                            return(\r\n                              <option value={subreddit}>{subreddit}</option>\r\n                            )\r\n                          })\r\n                        }\r\n                      </Select>\r\n\r\n                      <div className=\"create__input__img\">    \r\n                        <input name='myname' required type=\"file\" accept='image/*' onChange={handleImgSelect} />\r\n                        <Progress value={imgProgress} borderRadius='5px' />\r\n                      </div>\r\n                    <ActionButton name='myname' type='submit' buttonText=\"Submit\" buttonVariant=\"filled\" buttonColor=\"blue\" buttonSize=\"md\" />\r\n\r\n                  </form>\r\n                \r\n                </TabPanel>\r\n              </TabPanels>\r\n            </Tabs>\r\n            </div>\r\n\r\n          </div>\r\n      ) : (\r\n        <Redirect to='/signup' />\r\n      )}\r\n      \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CreatePost\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Post.css'\r\nimport moment from 'moment'\r\n\r\nimport axios from 'axios'\r\nimport { Avatar } from '@chakra-ui/react'\r\n\r\nconst Post = ({postID,username,title,content,subreddit,createdAt, img, profileImg}) => {\r\n\r\n  const [post, setPost] = React.useState('')\r\n\r\n  React.useEffect(() => {\r\n    setPost(content.replace(/\\n/g, '\\n'))\r\n  }, [])\r\n  return (\r\n    <article className=\"post\">\r\n      <div className=\"post__container\">\r\n        <div className=\"post__row\">\r\n          <Link to={`/user/${username}`}>\r\n            <Avatar src={profileImg} name={username} size='md' />\r\n          </Link>\r\n          <div className=\"post__column\">\r\n            <div className=\"post__subreddit\">\r\n              <Link to={`/subreddit/${subreddit}`}>\r\n                <h1>TD/{subreddit}</h1>\r\n              </Link>\r\n            </div>\r\n            <div className=\"post__user\">\r\n              <Link to={`/user/${username}`}>\r\n                <h3>By u/{username} {moment(createdAt).fromNow()}</h3>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <>\r\n          <div className=\"post__title\">\r\n            <Link to={`/post/${postID}`}>\r\n              <h1>{title}</h1>\r\n            </Link>\r\n          </div>\r\n          {\r\n            img ? (\r\n              <div className=\"post__img\">\r\n                <img src={img} alt=\"\"/>\r\n              </div>\r\n            ): (\r\n              <div className=\"post__content\">\r\n                <p>{post}</p>\r\n              </div>\r\n            )\r\n          }\r\n        </>\r\n        <Link className=\"post__footer\" to={`/post/${postID}`}>\r\n          <h1>Comments</h1>\r\n        </Link>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React, {useState, useEffect,useContext} from 'react'\r\nimport axios from 'axios'\r\nimport { Skeleton, Stack } from '@chakra-ui/react'\r\nimport Post from '../Reusable/Post/Post'\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport './Home.css'\r\n\r\nconst Home = () => {\r\n  const { BASE_URL } = useContext(AuthContext)\r\n\r\n  const [posts, setPosts] = useState([])\r\n  const [loading, isLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    const fetchData = async() => {\r\n      const posts = await axios.get(`${BASE_URL}/posts`)\r\n      const postArr = posts.data.data.posts\r\n\r\n      setPosts(postArr) \r\n      isLoading(false)\r\n\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"home__container\">\r\n        <div className=\"home__posts\">\r\n          {loading ? (\r\n            <>\r\n              <Stack>\r\n                <Skeleton height=\"20px\" />\r\n                <Skeleton height=\"20px\" />\r\n                <Skeleton height=\"20px\" />\r\n\r\n              </Stack>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {posts.map(post => {\r\n                return(                  \r\n                  <Post key={post.postid} postID={post.postid} img={post.img_url} profileImg={post.profile_url} username={post.username} title={post.title} content={post.content} subreddit={post.subreddit} createdAt={post.createdat}/>\r\n                )\r\n              })}\r\n            </>\r\n          )}\r\n          \r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useContext, useState, useEffect } from 'react'\r\nimport { LinkButton } from '../Reusable/Buttons/Buttons'\r\nimport {AuthContext} from '../Context/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { IconButton, useToast } from '@chakra-ui/react'\r\nimport { MdHome, MdSettings } from 'react-icons/md'\r\nimport { IoMdGlobe } from 'react-icons/io'\r\nimport { FaPlus } from 'react-icons/fa'\r\nimport { GrLogout } from 'react-icons/gr'\r\n\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n  const {currentUser, logout} = useContext(AuthContext)\r\n\r\n  const [isMobile, setIsMobile] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      window.innerWidth < 700 ? setIsMobile(true) : setIsMobile(false)\r\n    \r\n}\r\n\r\n    window.addEventListener('resize', handleResize)\r\n    handleResize()\r\n  })\r\n\r\n  return (\r\n    <nav className=\"navbar\"  >\r\n      <div className=\"navbar__container\">\r\n        \r\n        <div className=\"navbar__header\">\r\n          <Link to=\"/\">\r\n            {isMobile ? (\r\n              <h1>TD</h1>\r\n              ) : (\r\n              <h1>TheDevstagram</h1>\r\n            )}\r\n          </Link>\r\n        </div>\r\n\r\n\r\n        {currentUser ? (\r\n            <div className=\"navbar__icons\">\r\n              <Link to=\"/create-post\">\r\n                <IconButton icon={<FaPlus />}  bg={'#4FD1C5'} mx=\"10px\" _hover={{opacity:\"0.85\"}}/>\r\n              </Link>\r\n              <Link to=\"/\">\r\n                <IconButton icon={<IoMdGlobe />}  bg={'#4FD1C5'} _hover={{opacity:\"0.85\"}}/>\r\n              </Link>\r\n              <Link to=\"/feed\">\r\n                <IconButton icon={<MdHome />}  bg={'#4FD1C5'} mx='10px' _hover={{opacity:\"0.85\"}} />\r\n              </Link>\r\n              <Link to='/settings' >\r\n                <IconButton icon={<MdSettings />}  bg={'#4FD1C5'} _hover={{opacity:\"0.85\"}} />\r\n              </Link>\r\n              <span onClick={logout}>\r\n                <IconButton icon={<GrLogout />}  bg={'#4FD1C5'} mx='10px' _hover={{opacity:\"0.85\"}} />\r\n              </span>\r\n            </div>\r\n\r\n          ) : (\r\n            <div className=\"navbar__buttons\">\r\n              <LinkButton buttonText=\"SignUp\" buttonColor=\"blue\" buttonSize=\"md\" buttonVariant=\"filled\" link=\"signup\"/>\r\n              <LinkButton buttonText=\"Login\" buttonColor=\"blue\" buttonSize=\"md\" buttonVariant=\"outlined\" link=\"login\"/>\r\n            </div>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState, useContext } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport { ActionButton } from '../Reusable/Buttons/Buttons'\r\nimport axios from 'axios'\r\nimport './SignUp.css'\r\n\r\nconst SignUp = () => {\r\n  \r\n  const { currentUser,signUp, BASE_URL } = useContext(AuthContext)\r\n  const history = useHistory()\r\n  const [userName, setUserName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n\r\n    const isSuccess = await signUp(email,password,userName)\r\n    console.log(isSuccess.user.displayName)\r\n    history.push('/')\r\n\r\n    const create = await axios.post(`${BASE_URL}/user/create`, {\r\n      uid: isSuccess.user.uid,\r\n      userName\r\n    })\r\n  }\r\n  \r\n\r\n  return (\r\n    <section className=\"signup\">\r\n      {currentUser ? (\r\n        <Redirect to='/' />\r\n      ) : (   \r\n      <div className=\"signup__container\">\r\n        <form onSubmit={handleSubmit} className=\"signup__form\">\r\n          <div className=\"signup__form__input\">\r\n            <input type=\"text\" value={userName} onChange={e => setUserName(e.target.value)} required/>\r\n            <label className=\"signup__form__label\">Username</label>\r\n          </div>\r\n          <div className=\"signup__form__input\">\r\n            <input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} required/>\r\n            <label className=\"signup__form__label\">Email</label>\r\n          </div>\r\n          <div className=\"signup__form__input\">\r\n            <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} required/>\r\n            <label className=\"signup__form__label\">Password</label>\r\n          </div>\r\n          <ActionButton buttonText=\"Submit\" buttonSize=\"lg\" buttonVariant=\"filled\" buttonColor=\"blue\" onSubmit={handleSubmit}/>\r\n        </form>\r\n      </div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import React,{ createContext, useReducer, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const CommentContext = createContext()\r\nconst BASE_URL = 'http://localhost:5000'\r\nexport const CommentContextProvider = ({children}) => {\r\n\r\n  const [comments, setComments] = useState([])\r\n\r\n  const deleteComment = async(commentID) => {\r\n    const deleteComment = await axios.delete(`${BASE_URL}/comments/${commentID}`) \r\n    setComments(comments.filter(comment => commentID !== comment.comment_id))\r\n  }\r\n\r\n  const updateComment = async(commentID, content, imageURL) => {\r\n    const formatted = {\r\n      imageURL,\r\n      commentID,\r\n      content\r\n    }\r\n    const updatedComment = await axios.put(`${BASE_URL}/comments/${commentID}`, formatted)\r\n    setComments([...comments, comments.map(comment => comment.comment_id === commentID ? comment.content = content : comment)])\r\n  } \r\n\r\n  const addComment = (comment) => {\r\n    setComments([comment,...comments])\r\n  }\r\n\r\n  const storeComments = commentsArray => {\r\n    setComments(commentsArray)\r\n  } \r\n\r\n  \r\n\r\n  return(\r\n    <CommentContext.Provider value={\r\n      {\r\n        comments,\r\n        storeComments,\r\n        deleteComment,\r\n        addComment,\r\n        updateComment\r\n      }\r\n    }>\r\n      {children}\r\n    </CommentContext.Provider>\r\n  )\r\n}","import React, {useContext, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport { CommentContext } from '../../Context/CommentContext'\r\nimport { AuthContext } from '../../Context/AuthContext'\r\nimport {ActionButton } from '../Buttons/Buttons'\r\nimport { Avatar } from '@chakra-ui/react'\r\nimport './Comment.css'\r\n\r\nconst Comment = ({userName, createdAt, content, commentID, profileURL}) => {\r\n  const { currentUser } = useContext(AuthContext)\r\n  const { deleteComment, updateComment } = useContext(CommentContext)\r\n\r\n  const [paraContent, setParaContent] = useState(content)\r\n  \r\n  const [isEditing, setIsEditing] = useState(false)\r\n\r\n  const handleUpdate = () => {\r\n    updateComment(commentID, paraContent,currentUser.photoURL)\r\n      \r\n    setIsEditing(false)\r\n  }\r\n\r\n  return (\r\n    <article className=\"comment\" s3>\r\n    \r\n      <div className=\"comment__column\">\r\n\r\n        <div className=\"comment__img\">\r\n          <Avatar src={profileURL} name={userName} size='sm' />\r\n        </div>\r\n        <div className=\"comment__details\">\r\n          <div className=\"comment__user\">\r\n\r\n            <Link to={`/user/${userName}`}>\r\n              <h1 className=\"comment__username\">By {userName} {moment(createdAt).fromNow()}</h1>\r\n            </Link>\r\n          </div>\r\n        \r\n        <div className=\"comment__content\">\r\n          {isEditing ? (\r\n            <>\r\n              <textarea className=\"comment__textarea\" value={paraContent} onChange={e => setParaContent(e.target.value)} ></textarea>\r\n              <div className=\"comment__buttons\">\r\n                <div onClick={handleUpdate}>\r\n                  <ActionButton buttonText=\"Update\" buttonVariant=\"filled\" buttonSize=\"md\" />\r\n                </div>\r\n                <div onClick={() => setIsEditing(false)}>\r\n                  <ActionButton buttonText=\"Cancel\" buttonVariant=\"filled\" buttonSize=\"md\"/>\r\n                </div>\r\n                <div  onClick={() => deleteComment(commentID)} >\r\n                  <ActionButton buttonText=\"Delete\" buttonVariant=\"outlined\" buttonSize=\"md\"/>\r\n                </div>\r\n\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p className=\"comment__para\">\r\n              {paraContent}\r\n            </p>\r\n          )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='comment__edit__container'>\r\n        {\r\n          currentUser?.displayName === userName  || currentUser.displayName === 'joshua_45' ? (\r\n            isEditing ? \"\" : (\r\n              \r\n              <button className=\"comment__edit\" onClick={() => setIsEditing(true)}>\r\n                Edit\r\n              </button>\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Comment","import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport Comment from '../../Reusable/Comment/Comment'\r\n\r\nimport './PostComments.css'\r\nimport { CommentContext } from '../../Context/CommentContext'\r\nimport { AuthContext } from '../../Context/AuthContext'\r\n\r\nconst PostComments = () => {\r\n  const { BASE_URL } = useContext(AuthContext)\r\n  const { comments, storeComments } = useContext(CommentContext)\r\n  const { postID } = useParams()\r\n\r\n  // const [comments, setComments] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getComments = async() => {\r\n      const fetchComments = await axios.get(`${BASE_URL}/comments/${postID}`)\r\n      storeComments([...fetchComments.data.data.comments])\r\n    }\r\n    getComments()\r\n  }, [])  \r\n  return (\r\n    <section className=\"post-comments\">\r\n      <div className=\"post-comments__container\">\r\n        <h1 className=\"post-comments__title\">Comments</h1>\r\n        {\r\n          comments.map(comment => {\r\n            return(\r\n              <Comment key={comment.comment_id} profileURL={comment.profile_url} userName={comment.username} createdAt={comment.createdAt} content={comment.content} commentID={comment.comment_id} />\r\n            )\r\n          })\r\n        } \r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PostComments\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { AuthContext } from '../../Context/AuthContext'\r\nimport { useToast } from '@chakra-ui/react'\r\nimport './LikeButton.css'\r\n\r\nconst LikeButton = () => {\r\n  const {postID} = useParams()\r\n  const toast = useToast()\r\n  const {currentUser, BASE_URL } = useContext(AuthContext)\r\n  const [didUSerLike, setDidUserLike] = useState()\r\n  const [numOfLikes, setNumOfLikes] = useState()\r\n\r\n\r\n  const likePost = async() => {\r\n    if(await currentUser){\r\n\r\n      const formattedDetails = {\r\n        userName: await currentUser.displayName,\r\n        postID\r\n      }\r\n  \r\n      axios.post(`${BASE_URL}/likes/add`,formattedDetails)\r\n      setNumOfLikes(numOfLikes+1)\r\n      setDidUserLike(true)\r\n    } else {\r\n      toast({\r\n        title: \"Cannot cast vote\",\r\n        description: \"You need to create an account to like/dislike a post\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const dislikePost = async() => {\r\n    if(currentUser){  \r\n      const formattedDetails = {\r\n        userName: await currentUser.displayName,\r\n        postID\r\n      }\r\n      const userName = await currentUser.displayName\r\n      console.log(formattedDetails)\r\n      axios.post(`${BASE_URL}/likes/dislike`,formattedDetails)\r\n      setNumOfLikes(numOfLikes-1)\r\n      setDidUserLike(false)\r\n    } else {\r\n      toast({\r\n        title: \"Cannot cast vote\",\r\n        description: \"You need to create an account to like post\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(currentUser){\r\n\r\n      const fetchLikes = async() => {\r\n        const fetch = await axios.get(`${BASE_URL}/likes/${postID}`)\r\n        const likeArr = fetch.data.data.likedBy.map(like => like.username)\r\n        setDidUserLike(likeArr.includes(currentUser.displayName))\r\n        setNumOfLikes(fetch.data.data.numOfLikes)\r\n      }\r\n      fetchLikes()\r\n    } else {\r\n      const fetchLikes = async() => {\r\n        const fetch = await axios.get(`${BASE_URL}/likes/${postID}`)\r\n        setNumOfLikes(fetch.data.data.numOfLikes)\r\n      }\r\n      fetchLikes()\r\n    }\r\n  }, [currentUser])\r\n  \r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n      {didUSerLike && didUSerLike !== undefined ? (\r\n\r\n        <button className=\"like__btn\" onClick={dislikePost}>\r\n          <div className={`heart liked ${didUSerLike ? \"is_animating\" : \"\"}`}/>\r\n          \r\n          <span className=\"counter\">\r\n            {numOfLikes}\r\n          </span>\r\n        </button>\r\n      ) : (\r\n        <button className=\"like__btn \" onClick={likePost}>\r\n          <div className=\"heart\"/>\r\n          <span className=\"counter\">\r\n            {numOfLikes}\r\n          </span>\r\n        </button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LikeButton\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport axios from 'axios'\r\nimport {Link, useHistory, useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport LikeButton from '../../Reusable/LikeButton/LikeButton'\r\nimport { AuthContext } from '../../Context/AuthContext'\r\nimport { ActionButton } from '../../Reusable/Buttons/Buttons'\r\nimport { Avatar, useToast } from '@chakra-ui/react'\r\n\r\nimport './PostContent.css'\r\n\r\nconst SinglePostContent = () => {\r\n  const history = useHistory()\r\n  const toast = useToast()\r\n\r\n  const { currentUser } = useContext(AuthContext)\r\n  const { BASE_URL } = useContext(AuthContext)\r\n\r\n  const {postID} = useParams()\r\n  const [username, setUserName] = useState('')\r\n  const [subreddit, setSubreddit] = useState('')\r\n  const [createdAt, setCreatedAt] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [imgURL, setImgURL] = useState()\r\n  const [profileURL, setProfileURL] = useState()\r\n\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [isOwner, setIsOwner] = useState(false)\r\n\r\n  const handleAction = async(type) => {\r\n    switch (type) {\r\n      case 'UPDATE':\r\n        const formattedData = {\r\n          postID,\r\n          content\r\n        }\r\n\r\n        const details = await axios.put(`${BASE_URL}/posts/update/${postID}`, formattedData)\r\n        toast(\r\n          {\r\n            title: details.data.message,\r\n            status: \"success\",\r\n            duration: 4000,\r\n            isClosable: true,\r\n          }\r\n        )\r\n        setIsEditing(false)\r\n        break;\r\n    \r\n      case 'DELETE':\r\n        axios.delete(`${BASE_URL}/posts/delete/${postID}`)\r\n          .then(() => {\r\n            history.push('/')\r\n          })\r\n        break\r\n        \r\n      default:\r\n        setIsEditing(false)\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getPostContent = async() => {\r\n      const postContent = await axios.get(`${BASE_URL}/posts/${postID}`)\r\n\r\n      const { subreddit,username,title,content,createdat,img_url,profile_url } = postContent.data.data.post\r\n      setSubreddit(subreddit)\r\n      setUserName(username)\r\n      setTitle(title)\r\n      setImgURL(img_url)\r\n      setProfileURL(profile_url)\r\n      setContent(content)\r\n      setCreatedAt(createdat)\r\n    }\r\n    getPostContent()\r\n\r\n    currentUser?.displayName === username ? setIsOwner(true) : setIsOwner(false) \r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"single-post-content\">\r\n      <div className=\"single-post-content__container\">\r\n        <div className=\"single-post-content__row\">\r\n          <Avatar src={profileURL} name={username} size='md' />\r\n          <div className=\"single-post-content__post-details\">\r\n            <Link to={`/subreddit/${subreddit}`}>\r\n              <h2 className=\"single-post-content__subreddit\">\r\n                TP/{subreddit} {isOwner}\r\n              </h2>\r\n            </Link>\r\n            <Link to={`/user/${username}`}>\r\n              <h3 className=\"single-post-content__username\">\r\n                By u/{username} {moment(createdAt).fromNow()}\r\n              </h3>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"single-post-content__post-content\">\r\n          <h1 className=\"single-post-content__title\">\r\n            {title}\r\n          </h1>\r\n          {\r\n            isEditing ? (\r\n              <div className='single-post-content__editing'>\r\n                {imgURL ? (\r\n                  <div className='single-post-content__img'>\r\n                    <img src={imgURL} alt=\"\"/>\r\n                  </div>\r\n                ) : (\r\n                  <textarea className=\"single-post-content__textarea\" value={content} onChange={e => setContent(e.target.value)}/>\r\n                )\r\n              }\r\n                <div className=\"single-post-content__buttons\">\r\n                  {\r\n                    imgURL ? (\r\n                      ''\r\n                    ) : (\r\n                      <div onClick={() => handleAction('UPDATE')}>\r\n                        <ActionButton buttonText='Update' buttonVariant='filled' buttonSize='md' />\r\n                      </div>\r\n                    )\r\n                  }\r\n                  \r\n                  <div onClick={() => setIsEditing(false)}>\r\n                    <ActionButton buttonText='Cancel' buttonVariant='filled' buttonSize='md'/>\r\n                  </div>\r\n                  <div onClick={() => handleAction('DELETE')}>\r\n                  <ActionButton buttonText='Delete' buttonVariant='outlined' buttonSize='md' />\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"single-post-content__not-editing\">\r\n                {\r\n                  imgURL ? (\r\n                    <div className='single-post-content__img'>\r\n                      <img src={imgURL} alt=\"\"/>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <p className=\"single-post-content__para\">\r\n                        {content}\r\n                      </p>\r\n                      \r\n                    </>\r\n                  )\r\n                }\r\n                {currentUser?.displayName === username || currentUser?.displayName === 'Joshua_45'? (\r\n                        <button className=\"single-post-content__edit\" onClick={() => setIsEditing(true)}>Edit</button>\r\n                ) : ('')}\r\n              </div>\r\n            )\r\n          }\r\n          <LikeButton postID={postID}/>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SinglePostContent","import React, {useState, useContext} from 'react'\r\nimport axios from 'axios'\r\nimport {useParams} from 'react-router-dom'\r\nimport {AuthContext} from '../../Context/AuthContext'\r\nimport { CommentContext } from '../../Context/CommentContext'\r\n\r\nimport { ActionButton } from '../../Reusable/Buttons/Buttons'\r\nimport {useToast} from '@chakra-ui/react'\r\n\r\nimport './PostForm.css'\r\n\r\nconst PostForm = () => {\r\n\r\n  const toast = useToast()\r\n  const { postID } = useParams()\r\n  const { currentUser } = useContext(AuthContext)\r\n  const { addComment } = useContext(CommentContext)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const handleCommentSubmit = async(e) => {\r\n    e.preventDefault()\r\n    if(currentUser){\r\n      const formattedDetails = {\r\n        userName: currentUser.displayName,\r\n        content: comment,\r\n        postID,\r\n        profileURL: currentUser.photoURL\r\n      }\r\n      const commentDetails = await axios.post('http://localhost:5000/comments/add', formattedDetails)\r\n      const { parent_postid, comment_id, content, createdat, username } = commentDetails.data.data.commentDetails\r\n      \r\n      const formattedComment = {\r\n        parent_postid,\r\n        comment_id,\r\n        content,\r\n        createdat,\r\n        username,\r\n        profile_url: await currentUser.photoURL\r\n      }\r\n      \r\n      addComment(formattedComment)\r\n      setComment('')\r\n    } else {\r\n      toast({\r\n        title: \"Failed to add comment\",\r\n        description: \"You need to create an account to comment\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form className=\"post-form\" onSubmit={handleCommentSubmit}>\r\n      <div className=\"post-form__container\">\r\n        <textarea name=\"comment\" className=\"post-form__textarea\" value={comment} onChange={e => setComment(e.target.value)} required/>\r\n        <label className=\"post-form__label\">Comment</label>   \r\n        <ActionButton buttonColor=\"blue\" buttonSize=\"lg\" buttonText=\"Submit\" buttonVariant=\"filled\" onClick={handleCommentSubmit} />     \r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PostForm","import React from 'react'\r\nimport PostComments from './PostComments/PostComments'\r\nimport SinglePostContent from './PostContent/PostContent'\r\nimport PostForm from './PostForm/PostForm'\r\n// import SinglePostContent from './PostContent/PostContent'\r\n// \r\nimport './SinglePostPage.css'\r\n\r\nconst SinglePostPage = () => {\r\n\r\n  return (\r\n    <section className=\"single-post\">\r\n      <div className=\"single-post__container\">\r\n        <SinglePostContent />\r\n        <PostForm />  \r\n        <PostComments />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SinglePostPage","import { useToast } from '@chakra-ui/react'\r\nimport React, { useState, useContext } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport { ActionButton } from '../Reusable/Buttons/Buttons'\r\n\r\nimport '../SignUp/SignUp.css'\r\n\r\nconst Login = () => {\r\n  const toast = useToast()\r\n  const history = useHistory()\r\n  const { logIn, currentUser } = useContext(AuthContext)\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n\r\n    const isSuccess = await logIn(email,password)\r\n    if(isSuccess.user){\r\n      history.push('/')\r\n      toast({\r\n        title: \"Success\",\r\n        description: `Hey, welcome back`,\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      })\r\n\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section className=\"signup\">\r\n      {currentUser ? (\r\n        <Redirect to='/' />\r\n      ) : (\r\n\r\n      <div className=\"signup__container\">\r\n        <form onSubmit={handleSubmit} className=\"signup__form\">\r\n\r\n          <div className=\"signup__form__input\">\r\n            <input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} required/>\r\n            <label className=\"signup__form__label\">Email</label>\r\n          </div>\r\n          <div className=\"signup__form__input\">\r\n            <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} required/>\r\n            <label className=\"signup__form__label\">Password</label>\r\n          </div>\r\n          <ActionButton buttonText=\"Submit\" buttonSize=\"lg\" buttonVariant=\"filled\" buttonColor=\"blue\" onSubmit={handleSubmit}/>\r\n        </form>\r\n      </div>\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport {useParams} from 'react-router-dom'\r\nimport {ActionButton} from '../Buttons/Buttons'\r\nimport { AuthContext } from '../../Context/AuthContext'\r\n\r\nimport './SubredditAbout.css'\r\nimport { useToast } from '@chakra-ui/react'\r\n\r\nconst SubredditAbout = ({numOfPosts}) => {\r\n  const toast = useToast()\r\n  const {currentUser, BASE_URL } =  useContext(AuthContext)\r\n  const { subreddit } = useParams()\r\n\r\n  const [isFollowing, setIsFollowing] = useState(false)\r\n\r\n  const [about, setAbout] = useState('')\r\n\r\n  const followSubreddit = async() => {\r\n    if(currentUser) {\r\n\r\n      const formattedDetails = {\r\n        username: await currentUser.displayName,\r\n        subreddit\r\n      }\r\n      const follow = await axios.post(`${BASE_URL}/user/follow/subreddit`, formattedDetails)\r\n      setIsFollowing(true)\r\n    } else {\r\n      toast(\r\n        {\r\n          title: 'Action failed',\r\n          description: \"Create an account to follow a subreddit\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  const unfollowSubreddit = async() => {\r\n    const formattedDetails = {\r\n      username: await currentUser.displayName,\r\n      subreddit\r\n    }\r\n    const unfollow = await axios.post(`${BASE_URL}/user/unfollow/subreddit`, formattedDetails)\r\n    setIsFollowing(false)\r\n\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchSubredditDetails = async() => {\r\n      const fetchDetails = await axios.get(`${BASE_URL}/subreddits/${subreddit}`)\r\n      setAbout(fetchDetails.data.data.about)\r\n      {currentUser ? setIsFollowing(fetchDetails.data.data.followed_by.includes(currentUser.displayName)) : setIsFollowing(false)}\r\n      \r\n    }\r\n\r\n    fetchSubredditDetails()\r\n  },  [])\r\n  return (\r\n    <aside className=\"subreddit_about\">\r\n      <div className=\"subreddit_about__container\">\r\n        <h1 className=\"subreddit_about__title\">TP/{subreddit}</h1>\r\n        <p className=\"subreddit_about__para\">{about}</p>\r\n        <h3 className=\"subreddit_about__posts\"><span className=\"posts__num\">{numOfPosts}</span> Posts</h3>\r\n        \r\n        { isFollowing ? (\r\n          <div className=\"\" onClick={unfollowSubreddit}>\r\n            <ActionButton buttonColor=\"blue\" buttonSize=\"lg\" buttonText=\"Leave\" buttonVariant=\"outlined\" />\r\n          </div>\r\n        ) : (\r\n          <div className=\"\" onClick={followSubreddit}>\r\n            <ActionButton buttonColor=\"blue\" buttonSize=\"lg\" buttonText=\"Join\" buttonVariant=\"filled\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default SubredditAbout\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport axios from 'axios'\r\nimport { Skeleton, Stack } from '@chakra-ui/react'\r\nimport Post from '../Reusable/Post/Post'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport '../Home/Home.css'\r\nimport SubredditAbout from '../Reusable/SubredditAbout/SubredditAbout'\r\nimport { AuthContext } from '../Context/AuthContext'\r\n\r\nconst SingleSubreddit = () => {\r\n  const { BASE_URL } = useContext(AuthContext)\r\n  const { subreddit } = useParams()\r\n\r\n  const [posts, setPosts] = useState([])\r\n  const [loading, isLoading] = useState(true)\r\n  const [numOfPosts, setNumOfPosts] = useState(0)\r\n\r\n  useEffect(() => {\r\n    //use axios to fetch data from backend\r\n    const fetchData = async() => {\r\n      const posts = await axios.get(`${BASE_URL}/posts/subreddit/${subreddit}`)\r\n      const postArr = posts.data.data.posts\r\n      setPosts(postArr) \r\n      setNumOfPosts(postArr.length)\r\n      isLoading(false)\r\n\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"home__container\">\r\n        <div className=\"home__posts\">\r\n          {loading ? (\r\n            <>\r\n              <Stack>\r\n                <Skeleton height=\"20px\" />\r\n                <Skeleton height=\"20px\" />\r\n                <Skeleton height=\"20px\" />\r\n\r\n              </Stack>\r\n            </>\r\n          ) : (\r\n            <div className=\"home__flex\">\r\n            \r\n              <div className=\"home__column\">\r\n                {posts.map(post => {\r\n                  return(\r\n                    \r\n                    <Post postID={post.postid} img={post.img_url} profileImg={post.profile_url} username={post.username} title={post.title} content={post.content} subreddit={post.subreddit} createdAt={post.createdat}/>\r\n                  )\r\n                })}\r\n              </div>\r\n              <SubredditAbout numOfPosts={numOfPosts}/>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SingleSubreddit","import React, {useState, useEffect, useContext} from 'react'\r\nimport axios from 'axios'\r\nimport { Skeleton, Stack } from '@chakra-ui/react'\r\nimport Post from '../Reusable/Post/Post'\r\n\r\nimport '../Home/Home.css'\r\nimport { AuthContext } from '../Context/AuthContext'\r\n\r\nconst PrivateFeed = () => {\r\n  const { currentUser, BASE_URL } = useContext(AuthContext)\r\n\r\n  const [posts, setPosts] = useState([])\r\n  const [loading, isLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    //use axios to fetch data from backend\r\n    const fetchData = async() => {\r\n      const posts = await axios.get(`${BASE_URL}/posts/feed/${currentUser.displayName}`)\r\n      setPosts(posts.data.data.posts) \r\n      isLoading(false)\r\n\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"home__container\">\r\n        <div className=\"home__posts\">\r\n          {loading ? (\r\n            <>\r\n              <Stack>\r\n                <Skeleton height=\"20px\" />\r\n                <Skeleton height=\"20px\" />\r\n                <Skeleton height=\"20px\" />\r\n\r\n              </Stack>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {posts.map(post => {\r\n                return(\r\n                  \r\n                  <Post key={post.postID} postID={post.postid} profileImg={post.profile_url} img={post.img_url} username={post.username} title={post.title} content={post.content} subreddit={post.subreddit} createdAt={post.createdat}/>\r\n                )\r\n              })}\r\n            </>\r\n          )}\r\n          \r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PrivateFeed","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Post from '../../Reusable/Post/Post'\r\nimport './UserProfileContent.css'\r\nimport { AuthContext } from '../../Context/AuthContext'\r\n\r\n\r\nconst UserProfileContent = () => {\r\n  const { BASE_URL } = useContext(AuthContext)\r\n  const { username } = useParams()\r\n\r\n  const [posts, setPosts] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getPosts = async() => {\r\n      const posts = await axios.get(`${BASE_URL}/posts/user/${username}`)\r\n      setPosts(posts.data.data.posts)\r\n    }\r\n\r\n    getPosts()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <section className=\"user-profile\">\r\n      <div className=\"user-profile__container\">\r\n        {\r\n          posts.map(post => {\r\n\r\n            return(\r\n              <Post postID={post.postid} profileImg={post.profile_url} img={post.img_url} content={post.content} username={post.username} title={post.title} createdAt={post.createdat} subreddit={post.subreddit} />\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default UserProfileContent\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { AuthContext } from '../../Context/AuthContext'\r\nimport { Avatar } from '@chakra-ui/react'\r\nimport './UserProfileSide.css'\r\nimport { ActionButton, LinkButton } from '../../Reusable/Buttons/Buttons'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  useDisclosure\r\n} from \"@chakra-ui/react\"\r\n\r\n\r\nconst UserProfileSide = () => {\r\n  const { BASE_URL } = useContext(AuthContext)\r\n  const { username } = useParams()\r\n\r\n  const [bio, setBio] = useState()\r\n  const [subreddits, setSubreddits] = useState([])\r\n  const [imgURL, setImgURL] = useState()\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n  // const btnRef = React.useRef()\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async() => {\r\n      const userData = await axios.get(`${BASE_URL}/user/details/${username}`)\r\n      setSubreddits(userData.data.data.userDetails.followed_subreddits)\r\n      setBio(userData.data.data.userDetails.bio)\r\n      setImgURL(userData.data.data.userDetails.profile_url)\r\n    }\r\n\r\n    fetchUser()\r\n  }, [])\r\n  return (\r\n    <div className=\"user-profile-aside\">\r\n      <div className=\"user-profile-aside__container\">\r\n        <div className=\"user-profile-aside__img\">\r\n          <Avatar name={username} src={imgURL} size='lg'/>\r\n        </div>\r\n        <div className=\"user-profile-aside__content\">\r\n          <div className=\"user-profile-aside__col\">\r\n            <h1 className=\"user-profile-aside__username\">\r\n              {username}\r\n            </h1>\r\n            <p className=\"user-profile-aside__bio\">\r\n              {bio}\r\n            </p>\r\n          </div>\r\n          <div className=\"user-profile-aside__following\" onClick={ onOpen }>\r\n            <ActionButton  buttonText={`Following:  ${subreddits?.length ? subreddits.length : 0}`} buttonColor='blue' buttonSize='sm' buttonVariant='filled' />\r\n          </div>\r\n        </div>\r\n        <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        // finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay colorScheme='facebook'>\r\n          <DrawerContent backgroundColor='#1A202C'>\r\n            <DrawerCloseButton />\r\n            <DrawerHeader color='#4FD1C5' fontFamily='jetbrains mono'>{username} follows</DrawerHeader>\r\n\r\n            <DrawerBody>\r\n              {subreddits?.map(subreddit => {\r\n                return(\r\n                  <Link to={`/subreddit/${subreddit}`}>\r\n                    <LinkButton buttonVariant='filled' buttonSize='lg' buttonText={subreddit} m='mx-0' />\r\n                  </Link>\r\n                )\r\n              })}\r\n            </DrawerBody>\r\n\r\n            <DrawerFooter>\r\n              {/* <ActioButton variant=\"outline\" mr={3} onClick={onClose}>\r\n                Cancel\r\n              </ActioButton> */}\r\n              <div onClick={onClose}>\r\n                <ActionButton buttonColor='blue' buttonSize='sm'buttonText='Cancel' buttonVariant='filled' />\r\n              </div>\r\n            </DrawerFooter>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfileSide","import React,{ useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport { useParams } from 'react-router-dom'\r\nimport UserProfileContent from './UserProfileContent/UserProfileContent'\r\n\r\nimport './UserProfile.css'\r\nimport UserProfileSide from './UserProfileSide/UserProfileSide'\r\n\r\nconst UserProfile = () => {\r\n\r\n\r\n  return (\r\n    <section className=\"user\">\r\n      <div className=\"user__container\">\r\n      <UserProfileSide />\r\n      <UserProfileContent />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default UserProfile\r\n","import React, { useContext, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { ActionButton } from '../../Reusable/Buttons/Buttons'\r\nimport './UserProfileSettings.css'\r\nimport { AuthContext } from '../../Context/AuthContext'\r\nimport { Avatar, useToast } from '@chakra-ui/react'\r\nimport { storage } from '../../Firebase/firebase'\r\n\r\nconst UserProfileSettings = () => {\r\n  const toast = useToast()\r\n  const { currentUser, BASE_URL } = useContext(AuthContext)\r\n\r\n  const [profileImg, setProfileImg] = useState(currentUser.photoURL)\r\n  const [bio, setBio] = useState()\r\n  const [portfolio, setPortfolio] = useState()\r\n\r\n  useEffect(() => {\r\n    const fetchData = async() => {\r\n      const userProfileData = await axios.get(`${BASE_URL}/user/settings/${currentUser.uid}`)\r\n      const { bio, portfolio } = userProfileData.data.data.userData\r\n      setBio(bio)\r\n      setPortfolio(portfolio)\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleProfileChange = async(e) => {\r\n    e.preventDefault()\r\n    if(currentUser.uid){\r\n      const uploadToStorage = storage.ref(`profilePic/${currentUser.displayName}`).put(e.target.files[0])\r\n\r\n        uploadToStorage.on(\r\n          'state_changed',\r\n          (snapshot) => {\r\n            let progressImgCompleted = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            console.log(progressImgCompleted)\r\n          },\r\n          (err) => {\r\n            alert(err.message)\r\n          },\r\n          async() => {\r\n            const imageDownloadURL = await uploadToStorage.snapshot.ref.getDownloadURL()\r\n\r\n            const response = await axios.post(`${BASE_URL}/user/update/profile`, {imageDownloadURL,uid: currentUser.uid})\r\n            setProfileImg(imageDownloadURL)\r\n            currentUser.updateProfile({\r\n              photoURL: await imageDownloadURL\r\n            })\r\n          }\r\n        )\r\n    } \r\n  }\r\n\r\n  const handleSubmitBio = async(e) => {\r\n    e.preventDefault()\r\n    const changeBio = await axios.post(`${BASE_URL}/user/update/bio`, {bio, uid: await currentUser.uid})\r\n    if(changeBio.data.status === 'Success'){\r\n      toast(\r\n        {\r\n          title: \"Action completed\",\r\n          description: \"Bio changed successfully\",\r\n          status: \"success\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n    } else {\r\n      toast(\r\n        {\r\n          title: \"Action failed\",\r\n          description: \"Bio could not be changed\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n    }\r\n  \r\n  }\r\n\r\n  const handleSubmitPortfolio = async(e) => {\r\n    e.preventDefault()\r\n    const changePortfolio = await axios.post(`${BASE_URL}/user/update/portfolio`, {portfolio,  uid: await currentUser.uid})\r\n    console.log(changePortfolio.data.status)\r\n  \r\n    if(changePortfolio.data.status === 'Success'){\r\n      toast(\r\n        {\r\n          title: \"Action \",\r\n          description: \"Portfolio link could not be added\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        }\r\n      )\r\n    }\r\n  \r\n  }\r\n\r\n  return (\r\n    <section className='user-profile-settings'>\r\n      <form onSubmit={e => e.preventDefault()}>\r\n        <div className=\"user-profile-settings__container\">\r\n          <div className=\"user-profile-settings__avatar\">\r\n            <label htmlFor=\"myImageInput\">\r\n              <Avatar src={profileImg} name={currentUser.displayName} size='lg' _hover={{\r\n                opacity: 0.5,\r\n                cursor:'pointer',\r\n                transition: '0.3s ease-in-out'\r\n              }} />\r\n            </label>\r\n            <input type=\"file\" id='myImageInput' onChange={handleProfileChange}/>\r\n            \r\n            <h1 className=\"user-profile-settings__content\">\r\n              Profile Details\r\n            </h1>\r\n\r\n            \r\n          </div>\r\n        </div>  \r\n      </form>\r\n      <div className=\"user-profile-settings__form\">\r\n        <form className=\"user-profile-settings__bio\" onSubmit={handleSubmitBio}>\r\n          <textarea maxLength='200' required value={bio} onChange={e => setBio(e.target.value)}/>\r\n          <label>Bio</label>\r\n        <ActionButton  buttonColor='blue' buttonSize='lg' buttonText='Update' buttonVariant='filled ' />\r\n        </form>\r\n\r\n        <form className=\"user-profile-settings__bio\" onSubmit={handleSubmitPortfolio}>\r\n          <input maxLength='200' required value={portfolio} onChange={e => setPortfolio(e.target.value)}/>\r\n          <label>Portfolio</label>\r\n        <ActionButton  buttonColor='blue' buttonSize='lg' buttonText='Update' buttonVariant='filled ' />\r\n        </form>\r\n      </div>\r\n\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default UserProfileSettings\r\n","import React, {useState, useEffect, useContext} from 'react'\r\nimport {axios} from 'axios'\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport { Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/react'\r\nimport { MdAccountCircle } from 'react-icons/md'\r\nimport { BiUserCircle } from 'react-icons/bi'\r\nimport './Settings.css'\r\nimport UserProfileSettings from './UserProfileSettings/UserProfileSettings'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst Settings = () => {\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n\r\n\r\n  return (\r\n    <section className='settings'>\r\n      {currentUser ? (\r\n\r\n      <div className=\"settings__container\">\r\n        <Tabs isFitted size='lg'>\r\n            <TabList>\r\n              <Tab color='#4FD1C5'>\r\n                <MdAccountCircle />\r\n              </Tab>\r\n              <Tab color='#4FD1C5'>\r\n                <BiUserCircle />\r\n              </Tab>\r\n            </TabList>\r\n            <TabPanels>\r\n              <TabPanel>\r\n                <UserProfileSettings />\r\n              </TabPanel>\r\n              \r\n              <TabPanel>\r\n                \r\n              \r\n              </TabPanel>\r\n            </TabPanels>\r\n          </Tabs>\r\n      </div>\r\n      ) : (\r\n        <Redirect to='/' />\r\n      )}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Settings","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { AuthProvider } from './Components/Context/AuthContext';\nimport CreatePost from './Components/CreatePost/Create';\nimport Home from './Components/Home/Home';\nimport Navbar from './Components/Navbar/Navbar';\nimport SignUp from './Components/SignUp/SignUp';\n\nimport './App.css';\n\nimport SinglePostPage from './Components/SinglePost/SinglePostPage';\nimport Login from './Components/Login/Login';\nimport SingleSubreddit from './Components/SingleSubreddit/SingleSubreddit';\nimport PrivateFeed from './Components/PrivateFeed/PrivateFeed';\nimport UserProfile from './Components/UserProfile/UserProfile';\nimport Settings from './Components/Settings/Settings';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Router>\n        <AuthProvider>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/signup\">\n              <SignUp />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/create-post\">\n              <CreatePost />\n            </Route>\n            <Route exact path=\"/post/:postID\">\n              <SinglePostPage />\n            </Route>\n            <Route path='/feed'>\n              <PrivateFeed />\n            </Route>\n            <Route path='/settings'>\n              <Settings />\n            </Route>\n            <Route path=\"/subreddit/:subreddit\">\n              <SingleSubreddit />\n            </Route>\n            <Route path=\"/user/:username\">\n              <UserProfile />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { CommentContext, CommentContextProvider } from './Components/Context/CommentContext';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <CommentContextProvider >\n        <App />\n      </CommentContextProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}