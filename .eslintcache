[{"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Navbar\\Navbar.jsx":"3","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Context\\AuthContext.js":"4","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Firebase\\firebase.js":"5","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SignUp\\SignUp.jsx":"6","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Buttons\\Buttons.jsx":"7","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Home\\Home.jsx":"8","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Post\\Post.jsx":"9","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\CreatePost\\Create.jsx":"10","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\SinglePostPage.jsx":"11","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostContent\\PostContent.jsx":"12","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostForm\\PostForm.jsx":"13","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Login\\Login.jsx":"14","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostComments\\PostComments.jsx":"15","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Comment\\Comment.jsx":"16","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Context\\CommentContext.js":"17","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\LikeButton\\LikeButton.jsx":"18","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SingleSubreddit\\SingleSubreddit.jsx":"19","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\SubredditAbout\\SubredditAbout.jsx":"20","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\PrivateFeed\\PrivateFeed.jsx":"21"},{"size":456,"mtime":1611408212517,"results":"22","hashOfConfig":"23"},{"size":1516,"mtime":1611929425728,"results":"24","hashOfConfig":"23"},{"size":1837,"mtime":1611927616984,"results":"25","hashOfConfig":"23"},{"size":1108,"mtime":1610800541658,"results":"26","hashOfConfig":"23"},{"size":448,"mtime":1610640996657,"results":"27","hashOfConfig":"23"},{"size":1997,"mtime":1611831743202,"results":"28","hashOfConfig":"23"},{"size":696,"mtime":1610688910288,"results":"29","hashOfConfig":"23"},{"size":1438,"mtime":1610731092055,"results":"30","hashOfConfig":"23"},{"size":1470,"mtime":1611852055172,"results":"31","hashOfConfig":"23"},{"size":3292,"mtime":1610946755589,"results":"32","hashOfConfig":"23"},{"size":569,"mtime":1611396115567,"results":"33","hashOfConfig":"23"},{"size":1828,"mtime":1611467868121,"results":"34","hashOfConfig":"23"},{"size":1786,"mtime":1611411754380,"results":"35","hashOfConfig":"23"},{"size":1327,"mtime":1611394123260,"results":"36","hashOfConfig":"23"},{"size":1229,"mtime":1611414304933,"results":"37","hashOfConfig":"23"},{"size":2403,"mtime":1611427979349,"results":"38","hashOfConfig":"23"},{"size":1255,"mtime":1611428002382,"results":"39","hashOfConfig":"23"},{"size":2492,"mtime":1611834206946,"results":"40","hashOfConfig":"23"},{"size":1888,"mtime":1611842651048,"results":"41","hashOfConfig":"23"},{"size":2273,"mtime":1611929002246,"results":"42","hashOfConfig":"23"},{"size":1669,"mtime":1611929721860,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"pzz3eb",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"47"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\index.js",["98"],"import { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { CommentContext, CommentContextProvider } from './Components/Context/CommentContext';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <CommentContextProvider >\n        <App />\n      </CommentContextProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n",["99","100"],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Navbar\\Navbar.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Context\\AuthContext.js",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Firebase\\firebase.js",["101"],"import firebase from 'firebase'\r\nimport 'firebase/auth'\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCxkufqsXB9CDUdwaDgNwbC1LNHqv-b5dw\",\r\n  authDomain: \"memories-fedd4.firebaseapp.com\",\r\n  projectId: \"memories-fedd4\",\r\n  storageBucket: \"memories-fedd4.appspot.com\",\r\n  messagingSenderId: \"73933300893\",\r\n  appId: \"1:73933300893:web:c7c8247b5683d1d4af2074\",\r\n  measurementId: \"G-5MXCFDHY5H\"\r\n});\r\n\r\nexport const auth = firebase.auth()\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SignUp\\SignUp.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Buttons\\Buttons.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Home\\Home.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Post\\Post.jsx",["102","103"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Post.css'\r\nimport moment from 'moment'\r\n\r\nimport axios from 'axios'\r\n\r\nconst Post = ({postID,username,title,content,likeCount,commentCount,subreddit,createdAt}) => {\r\n\r\n  const [post, setPost] = React.useState('')\r\n\r\n  React.useEffect(() => {\r\n    setPost(content.replace(/\\n/g, '\\n'))\r\n    const getComments = async() => {\r\n      const comments = await axios.get(`http://localhost:5000/comments/${postID}`)\r\n    \r\n    }\r\n    getComments()\r\n    // setPost(content.replace(new RegExp('\\r?\\n','g'), '<br/>'))\r\n  }, [])\r\n  return (\r\n    <article className=\"post\">\r\n      <div className=\"post__container\">\r\n        <div className=\"post__row\">\r\n          <div className=\"post__subreddit\">\r\n            <Link to={`/subreddit/${subreddit}`}>\r\n              <h1>TD/{subreddit}</h1>\r\n            </Link>\r\n          </div>\r\n          <div className=\"post__user\">\r\n            <Link to={`/user/${username}`}>\r\n              <h3>u/{username} posted this {moment(createdAt).fromNow()}</h3>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"post__row\">\r\n          <div className=\"post__title\">\r\n            <Link to={`/post/${postID}`}>\r\n              <h1>{title}</h1>\r\n            </Link>\r\n          </div>\r\n          <div className=\"post__content\">\r\n            <p>{post}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\CreatePost\\Create.jsx",["104","105"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { Select, useToast } from '@chakra-ui/react'\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport { ActionButton } from '../Reusable/Buttons/Buttons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './Create.css'\r\n\r\nconst CreatePost = () => {\r\n  const history = useHistory()\r\n  const toast = useToast()\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n  const [subreddits, setSubreddits] = useState([])\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [selectedSubreddit, setSelectedSubreddit] = useState('All')\r\n  const [userName, setUserName] = useState(null)\r\n\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    if(currentUser.uid){\r\n\r\n      const formatDetails = await {\r\n        title,\r\n        content ,\r\n        subreddit: selectedSubreddit,\r\n        userName: currentUser.displayName\r\n      }\r\n      \r\n      const response = await axios.post('http://localhost:5000/posts/add', formatDetails)\r\n      history.push(`/post/${response.data.postID}`)\r\n    } else {\r\n      toast({\r\n        title: \"Failed to add post\",\r\n        description: \"You need to create an account to post \",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })\r\n      console.log(\"failed\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchSubreddits = async() => {\r\n      const subreddits = await axios.get('http://localhost:5000/subreddits')\r\n      setSubreddits(subreddits.data.subreddits.map(subreddit => subreddit.subreddit))\r\n    }\r\n\r\n    fetchSubreddits()\r\n  }, [])\r\n  return (\r\n    <section className=\"create\">\r\n      <div className=\"create__container\">\r\n        {currentUser ? (\r\n          <form onSubmit={handleSubmit} className=\"create__form\">\r\n            \r\n            <div className=\"create__input\">\r\n              <input type=\"text\" required value={title} onChange={e => setTitle(e.target.value)}/>\r\n              <label className=\"create__label\">Title</label>\r\n            </div>\r\n            <Select value={selectedSubreddit} onChange={e => setSelectedSubreddit(e.target.value)} variant=\"filled\" bg='#4FD1C5' color=\"black\" _hover={{bg: \"#4FD1C5\"}} _focus={{bg: \"#4FD1C5\"}}>\r\n                {\r\n                  subreddits.map((subreddit) => {\r\n                    return(\r\n                      <option value={subreddit}>{subreddit}</option>\r\n                    )\r\n                  })\r\n                }\r\n              </Select>\r\n            <div className=\"create__input\">\r\n              <textarea type=\"text\" required value={content} onChange={e => setContent(e.target.value)}/>\r\n              <label className=\"create__label\">Text</label>\r\n            </div>\r\n              <ActionButton buttonText=\"Submit\" buttonVariant=\"filled\" buttonColor=\"blue\" buttonSize=\"md\" />\r\n              \r\n          </form>\r\n        ): (\r\n          \r\n          toast({\r\n            title: \"Failed to load component\",\r\n            description: \"You need to create an account to access this component \",\r\n            status: \"error\",\r\n            duration: 2000,\r\n            isClosable: true,\r\n          })\r\n        )}\r\n\r\n\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CreatePost\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\SinglePostPage.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostContent\\PostContent.jsx",["106"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nimport './PostContent.css'\r\nimport LikeButton from '../../Reusable/LikeButton/LikeButton'\r\n\r\nconst SinglePostContent = () => {\r\n  const {postID} = useParams()\r\n  const [username, setUserName] = useState('')\r\n  const [subreddit, setSubreddit] = useState('')\r\n  const [createdAt, setCreatedAt] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n\r\n  \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getPostContent = async() => {\r\n      const postContent = await (await axios.get(`http://localhost:5000/posts/${postID}`))\r\n\r\n      const { subreddit,username,title,content,createdat } = postContent.data.data.post\r\n      setSubreddit(subreddit)\r\n      setUserName(username)\r\n      setTitle(title)\r\n\r\n      setContent(content.replace(/\\n/g, '\\n'))\r\n      setCreatedAt(createdat)\r\n    }\r\n    getPostContent()\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"single-post-content\">\r\n      <div className=\"single-post-content__container\">\r\n        <div className=\"single-post-content__post-details\">\r\n          <h2 className=\"single-post-content__subreddit\">\r\n            TP/{subreddit}\r\n          </h2>\r\n          <h3 className=\"single-post-content__username\">\r\n            By u/{username} {moment(createdAt,'YYYYMMDD').fromNow()}\r\n          </h3>\r\n        </div>\r\n        <div className=\"single-post-content__post-content\">\r\n          <h1 className=\"single-post-content__title\">\r\n            {title}\r\n          </h1>\r\n          <p className=\"single-post-content__para\">\r\n            {content}\r\n          </p>\r\n          <LikeButton postID={postID}/>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SinglePostContent","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostForm\\PostForm.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Login\\Login.jsx",["107"],"import React, { useState, useContext } from 'react'\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport { ActionButton } from '../Reusable/Buttons/Buttons'\r\n\r\nimport '../SignUp/SignUp.css'\r\n\r\nconst Login = () => {\r\n  const { logIn } = useContext(AuthContext)\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n\r\n    const isSuccess = await logIn(email,password)\r\n  }\r\n\r\n  return (\r\n    <section className=\"signup\">\r\n      <div className=\"signup__container\">\r\n        <form onSubmit={handleSubmit} className=\"signup__form\">\r\n\r\n          <div className=\"signup__form__input\">\r\n            <input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} required/>\r\n            <label className=\"signup__form__label\">Email</label>\r\n          </div>\r\n          <div className=\"signup__form__input\">\r\n            <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} required/>\r\n            <label className=\"signup__form__label\">Password</label>\r\n          </div>\r\n          <ActionButton buttonText=\"Submit\" buttonSize=\"lg\" buttonVariant=\"filled\" buttonColor=\"blue\" onSubmit={handleSubmit}/>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostComments\\PostComments.jsx",["108","109"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport Comment from '../../Reusable/Comment/Comment'\r\n\r\nimport './PostComments.css'\r\nimport { CommentContext } from '../../Context/CommentContext'\r\n\r\nconst PostComments = () => {\r\n  const { comments, storeComments } = useContext(CommentContext)\r\n  const { postID } = useParams()\r\n\r\n  // const [comments, setComments] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getComments = async() => {\r\n      const fetchComments = await axios.get(`http://localhost:5000/comments/${postID}`)\r\n      storeComments([...fetchComments.data.data.comments])\r\n    }\r\n    getComments()\r\n  }, [])  \r\n  return (\r\n    <section className=\"post-comments\">\r\n      <div className=\"post-comments__container\">\r\n        <h1 className=\"post-comments__title\">Comments</h1>\r\n        {\r\n          comments.map(comment => {\r\n\r\n            return(\r\n              <Comment key={comment.comment_id} userName={comment.username} createdAt={comment.createdAt} content={comment.content} commentID={comment.comment_id} />\r\n            )\r\n          })\r\n        } \r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PostComments\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Comment\\Comment.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Context\\CommentContext.js",["110","111","112"],"import React,{ createContext, useReducer, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const CommentContext = createContext()\r\n\r\nexport const CommentContextProvider = ({children}) => {\r\n\r\n  const [comments, setComments] = useState([])\r\n\r\n  const deleteComment = async(commentID) => {\r\n    const deleteComment = await axios.delete(`http://localhost:5000/comments/${commentID}`) \r\n    setComments(comments.filter(comment => commentID !== comment.comment_id))\r\n  }\r\n\r\n  const updateComment = async(commentID, content) => {\r\n    const formatted = {\r\n      commentID,\r\n      content\r\n    }\r\n    const updatedComment = await axios.put(`http://localhost:5000/comments/${commentID}`, formatted)\r\n    setComments([...comments, comments.map(comment => comment.comment_id === commentID ? comment.content = content : comment)])\r\n  } \r\n\r\n  const addComment = comment => {\r\n    setComments([comment,...comments])\r\n  }\r\n\r\n  const storeComments = commentsArray => {\r\n    setComments(commentsArray)\r\n  } \r\n\r\n  \r\n\r\n  return(\r\n    <CommentContext.Provider value={\r\n      {\r\n        comments,\r\n        storeComments,\r\n        deleteComment,\r\n        addComment,\r\n        updateComment\r\n      }\r\n    }>\r\n      {children}\r\n    </CommentContext.Provider>\r\n  )\r\n}","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\LikeButton\\LikeButton.jsx",["113","114","115","116"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { AuthContext } from '../../Context/AuthContext'\r\nimport { BsHeart, BsHeartFill } from 'react-icons/bs'\r\nimport { useToast } from '@chakra-ui/react'\r\nimport './LikeButton.css'\r\n\r\nconst LikeButton = ({postID}) => {\r\n  const toast = useToast()\r\n  const {currentUser} = useContext(AuthContext)\r\n  const [didUSerLike, setDidUserLike] = useState()\r\n  const [numOfLikes, setNumOfLikes] = useState()\r\n\r\n\r\n  const likePost = async() => {\r\n    console.log(currentUser)\r\n    if(currentUser){\r\n\r\n      const formattedDetails = {\r\n        userName: await currentUser.displayName,\r\n        postID\r\n      }\r\n      console.log(formattedDetails)\r\n  \r\n      axios.post('http://localhost:5000/likes/add',formattedDetails)\r\n      setNumOfLikes(numOfLikes+1)\r\n      setDidUserLike(true)\r\n    } else {\r\n      toast({\r\n        title: \"Cannot cast vote\",\r\n        description: \"You need to create an account to like posts\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  const dislikePost = async() => {\r\n    const formattedDetails = {\r\n      userName: await currentUser.displayName,\r\n      postID\r\n    }\r\n    const userName = await currentUser.displayName\r\n    console.log(formattedDetails)\r\n    axios.post('http://localhost:5000/likes/dislike',formattedDetails)\r\n    setNumOfLikes(numOfLikes-1)\r\n    setDidUserLike(false)\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(currentUser){\r\n\r\n      const fetchLikes = async() => {\r\n        const fetch = await axios.get(`http://localhost:5000/likes/${postID}`)\r\n        const likeArr = fetch.data.data.likedBy.map(like => like.username)\r\n        setDidUserLike(likeArr.includes(currentUser.displayName))\r\n        setNumOfLikes(fetch.data.data.numOfLikes)\r\n      }\r\n      fetchLikes()\r\n    } else {\r\n\r\n    }\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      {didUSerLike && didUSerLike !== undefined ? (\r\n\r\n        <button className=\"like__btn\" onClick={dislikePost}>\r\n          <div className={`heart liked ${didUSerLike ? \"is_animating\" : \"\"}`}/>\r\n          \r\n          <span className=\"counter\">\r\n            {numOfLikes}\r\n          </span>\r\n        </button>\r\n      ) : (\r\n        <button className=\"like__btn \" onClick={likePost}>\r\n          <div className=\"heart\"/>\r\n          <span className=\"counter\">\r\n            {numOfLikes}\r\n          </span>\r\n        </button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LikeButton\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SingleSubreddit\\SingleSubreddit.jsx",["117"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Skeleton, Stack } from '@chakra-ui/react'\r\nimport Post from '../Reusable/Post/Post'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport '../Home/Home.css'\r\nimport SubredditAbout from '../Reusable/SubredditAbout/SubredditAbout'\r\n\r\nconst SingleSubreddit = () => {\r\n  const { subreddit } = useParams()\r\n\r\n  const [posts, setPosts] = useState([])\r\n  const [loading, isLoading] = useState(true)\r\n  const [numOfPosts, setNumOfPosts] = useState(0)\r\n\r\n  useEffect(() => {\r\n    //use axios to fetch data from backend\r\n    const fetchData = async() => {\r\n      const posts = await axios.get(`http://localhost:5000/posts/subreddit/${subreddit}`)\r\n      const postArr = posts.data.data.posts\r\n      setPosts(postArr) \r\n      setNumOfPosts(postArr.length)\r\n      isLoading(false)\r\n\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n  return (\r\n    <section className=\"home\">\r\n      <div className=\"home__container\">\r\n        <div className=\"home__posts\">\r\n          {loading ? (\r\n            <>\r\n              <Stack>\r\n                <Skeleton height=\"20px\" />\r\n                <Skeleton height=\"20px\" />\r\n                <Skeleton height=\"20px\" />\r\n\r\n              </Stack>\r\n            </>\r\n          ) : (\r\n            <div className=\"home__flex\">\r\n            \r\n              <div className=\"home__column\">\r\n                {posts.map(post => {\r\n                  return(\r\n                    \r\n                    <Post postID={post.postid} username={post.username} title={post.title} content={post.content} subreddit={post.subreddit} createdAt={post.createdat}/>\r\n                  )\r\n                })}\r\n              </div>\r\n              <SubredditAbout numOfPosts={numOfPosts}/>\r\n            </div>\r\n          )}\r\n          \r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SingleSubreddit","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\SubredditAbout\\SubredditAbout.jsx",["118","119","120"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport {useParams} from 'react-router-dom'\r\nimport {ActionButton} from '../Buttons/Buttons'\r\nimport { AuthContext } from '../../Context/AuthContext'\r\n\r\nimport './SubredditAbout.css'\r\n\r\nconst SubredditAbout = ({numOfPosts}) => {\r\n  const {currentUser} =  useContext(AuthContext)\r\n  const { subreddit } = useParams()\r\n\r\n  const [isFollowing, setIsFollowing] = useState(false)\r\n\r\n  const [about, setAbout] = useState('')\r\n\r\n  const followSubreddit = async() => {\r\n    const formattedDetails = {\r\n      username: await currentUser.displayName,\r\n      subreddit\r\n    }\r\n    const follow = await axios.post('http://localhost:5000/user/follow/subreddit', formattedDetails)\r\n    setIsFollowing(true)\r\n  }\r\n\r\n  const unfollowSubreddit = async() => {\r\n    const formattedDetails = {\r\n      username: await currentUser.displayName,\r\n      subreddit\r\n    }\r\n    const unfollow = await axios.post('http://localhost:5000/user/unfollow/subreddit', formattedDetails)\r\n    setIsFollowing(false)\r\n\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchSubredditDetails = async() => {\r\n      const fetchDetails = await axios.get(`http://localhost:5000/subreddits/${subreddit}`)\r\n      setAbout(fetchDetails.data.data.about)\r\n      setIsFollowing(fetchDetails.data.data.followed_by.includes(currentUser.displayName))\r\n    }\r\n\r\n    fetchSubredditDetails()\r\n  },  [])\r\n  return (\r\n    <section className=\"subreddit_about\">\r\n      <div className=\"subreddit_about__container\">\r\n        <h1 className=\"subreddit_about__title\">TP/{subreddit}</h1>\r\n        <p className=\"subreddit_about__para\">{about}</p>\r\n        <h3 className=\"subreddit_about__posts\"><span className=\"posts__num\">{numOfPosts}</span> Posts</h3>\r\n        \r\n        { isFollowing ? (\r\n          <div className=\"\" onClick={unfollowSubreddit}>\r\n            <ActionButton buttonColor=\"blue\" buttonSize=\"lg\" buttonText=\"Leave\" buttonVariant=\"outlined\" />\r\n          </div>\r\n        ) : (\r\n          <div className=\"\" onClick={followSubreddit}>\r\n            <ActionButton buttonColor=\"blue\" buttonSize=\"lg\" buttonText=\"Join\" buttonVariant=\"filled\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SubredditAbout\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\PrivateFeed\\PrivateFeed.jsx",["121","122","123"],{"ruleId":"124","severity":1,"message":"125","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":24},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"124","severity":1,"message":"132","line":4,"column":7,"nodeType":"126","messageId":"127","endLine":4,"endColumn":10},{"ruleId":"124","severity":1,"message":"133","line":15,"column":13,"nodeType":"126","messageId":"127","endLine":15,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":20,"column":6,"nodeType":"136","endLine":20,"endColumn":8,"suggestions":"137"},{"ruleId":"124","severity":1,"message":"138","line":19,"column":10,"nodeType":"126","messageId":"127","endLine":19,"endColumn":18},{"ruleId":"124","severity":1,"message":"139","line":19,"column":20,"nodeType":"126","messageId":"127","endLine":19,"endColumn":31},{"ruleId":"134","severity":1,"message":"140","line":34,"column":6,"nodeType":"136","endLine":34,"endColumn":8,"suggestions":"141"},{"ruleId":"124","severity":1,"message":"142","line":17,"column":11,"nodeType":"126","messageId":"127","endLine":17,"endColumn":20},{"ruleId":"124","severity":1,"message":"143","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"144","line":21,"column":6,"nodeType":"136","endLine":21,"endColumn":8,"suggestions":"145"},{"ruleId":"124","severity":1,"message":"146","line":1,"column":31,"nodeType":"126","messageId":"127","endLine":1,"endColumn":41},{"ruleId":"124","severity":1,"message":"147","line":11,"column":11,"nodeType":"126","messageId":"127","endLine":11,"endColumn":24},{"ruleId":"124","severity":1,"message":"148","line":20,"column":11,"nodeType":"126","messageId":"127","endLine":20,"endColumn":25},{"ruleId":"124","severity":1,"message":"149","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":17},{"ruleId":"124","severity":1,"message":"150","line":4,"column":19,"nodeType":"126","messageId":"127","endLine":4,"endColumn":30},{"ruleId":"124","severity":1,"message":"138","line":45,"column":11,"nodeType":"126","messageId":"127","endLine":45,"endColumn":19},{"ruleId":"134","severity":1,"message":"151","line":66,"column":6,"nodeType":"136","endLine":66,"endColumn":8,"suggestions":"152"},{"ruleId":"134","severity":1,"message":"153","line":29,"column":6,"nodeType":"136","endLine":29,"endColumn":8,"suggestions":"154"},{"ruleId":"124","severity":1,"message":"155","line":22,"column":11,"nodeType":"126","messageId":"127","endLine":22,"endColumn":17},{"ruleId":"124","severity":1,"message":"156","line":31,"column":11,"nodeType":"126","messageId":"127","endLine":31,"endColumn":19},{"ruleId":"134","severity":1,"message":"157","line":45,"column":7,"nodeType":"136","endLine":45,"endColumn":9,"suggestions":"158"},{"ruleId":"124","severity":1,"message":"159","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":22},{"ruleId":"124","severity":1,"message":"160","line":20,"column":13,"nodeType":"126","messageId":"127","endLine":20,"endColumn":20},{"ruleId":"134","severity":1,"message":"161","line":27,"column":6,"nodeType":"136","endLine":27,"endColumn":8,"suggestions":"162"},"no-unused-vars","'CommentContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["163"],"no-negated-in-lhs",["164"],"'app' is assigned a value but never used.","'comments' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'content' and 'postID'. Either include them or remove the dependency array. If 'setPost' needs the current value of 'content', you can also switch to useReducer instead of useState and read 'content' in the reducer.","ArrayExpression",["165"],"'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postID'. Either include it or remove the dependency array.",["166"],"'isSuccess' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'postID' and 'storeComments'. Either include them or remove the dependency array.",["167"],"'useReducer' is defined but never used.","'deleteComment' is assigned a value but never used.","'updatedComment' is assigned a value but never used.","'BsHeart' is defined but never used.","'BsHeartFill' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'postID'. Either include them or remove the dependency array.",["168"],"React Hook useEffect has a missing dependency: 'subreddit'. Either include it or remove the dependency array.",["169"],"'follow' is assigned a value but never used.","'unfollow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.displayName' and 'subreddit'. Either include them or remove the dependency array.",["170"],"'SubredditAbout' is defined but never used.","'postArr' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.displayName'. Either include it or remove the dependency array.",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [content, postID]",{"range":"186","text":"187"},"Update the dependencies array to be: [postID]",{"range":"188","text":"189"},"Update the dependencies array to be: [postID, storeComments]",{"range":"190","text":"191"},"Update the dependencies array to be: [currentUser, postID]",{"range":"192","text":"193"},"Update the dependencies array to be: [subreddit]",{"range":"194","text":"195"},"Update the dependencies array to be: [currentUser.displayName, subreddit]",{"range":"196","text":"197"},"Update the dependencies array to be: [currentUser.displayName]",{"range":"198","text":"199"},[591,593],"[content, postID]",[1005,1007],"[postID]",[711,713],"[postID, storeComments]",[1884,1886],"[currentUser, postID]",[891,893],"[subreddit]",[1427,1429],"[currentUser.displayName, subreddit]",[856,858],"[currentUser.displayName]"]