[{"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Navbar\\Navbar.jsx":"3","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Context\\AuthContext.js":"4","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Firebase\\firebase.js":"5","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SignUp\\SignUp.jsx":"6","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Buttons\\Buttons.jsx":"7","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Home\\Home.jsx":"8","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Post\\Post.jsx":"9","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\CreatePost\\Create.jsx":"10","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\SinglePostPage.jsx":"11","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostContent\\PostContent.jsx":"12","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostForm\\PostForm.jsx":"13","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Login\\Login.jsx":"14","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostComments\\PostComments.jsx":"15","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Comment\\Comment.jsx":"16","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Context\\CommentContext.js":"17","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\LikeButton\\LikeButton.jsx":"18","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SingleSubreddit\\SingleSubreddit.jsx":"19","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\SubredditAbout\\SubredditAbout.jsx":"20"},{"size":456,"mtime":1611408212517,"results":"21","hashOfConfig":"22"},{"size":1368,"mtime":1611841045871,"results":"23","hashOfConfig":"22"},{"size":2997,"mtime":1611853870602,"results":"24","hashOfConfig":"22"},{"size":1108,"mtime":1610800541658,"results":"25","hashOfConfig":"22"},{"size":448,"mtime":1610640996657,"results":"26","hashOfConfig":"22"},{"size":1997,"mtime":1611831743202,"results":"27","hashOfConfig":"22"},{"size":696,"mtime":1610688910288,"results":"28","hashOfConfig":"22"},{"size":1438,"mtime":1610731092055,"results":"29","hashOfConfig":"22"},{"size":1470,"mtime":1611852055172,"results":"30","hashOfConfig":"22"},{"size":3292,"mtime":1610946755589,"results":"31","hashOfConfig":"22"},{"size":569,"mtime":1611396115567,"results":"32","hashOfConfig":"22"},{"size":1828,"mtime":1611467868121,"results":"33","hashOfConfig":"22"},{"size":1786,"mtime":1611411754380,"results":"34","hashOfConfig":"22"},{"size":1327,"mtime":1611394123260,"results":"35","hashOfConfig":"22"},{"size":1229,"mtime":1611414304933,"results":"36","hashOfConfig":"22"},{"size":2403,"mtime":1611427979349,"results":"37","hashOfConfig":"22"},{"size":1255,"mtime":1611428002382,"results":"38","hashOfConfig":"22"},{"size":2492,"mtime":1611834206946,"results":"39","hashOfConfig":"22"},{"size":1888,"mtime":1611842651048,"results":"40","hashOfConfig":"22"},{"size":2270,"mtime":1611927326267,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"pzz3eb",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\index.js",["90"],"import { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { CommentContext, CommentContextProvider } from './Components/Context/CommentContext';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <CommentContextProvider >\n        <App />\n      </CommentContextProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n",["91","92"],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Navbar\\Navbar.jsx",["93","94"],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Context\\AuthContext.js",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Firebase\\firebase.js",["95"],"import firebase from 'firebase'\r\nimport 'firebase/auth'\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCxkufqsXB9CDUdwaDgNwbC1LNHqv-b5dw\",\r\n  authDomain: \"memories-fedd4.firebaseapp.com\",\r\n  projectId: \"memories-fedd4\",\r\n  storageBucket: \"memories-fedd4.appspot.com\",\r\n  messagingSenderId: \"73933300893\",\r\n  appId: \"1:73933300893:web:c7c8247b5683d1d4af2074\",\r\n  measurementId: \"G-5MXCFDHY5H\"\r\n});\r\n\r\nexport const auth = firebase.auth()\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SignUp\\SignUp.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Buttons\\Buttons.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Home\\Home.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Post\\Post.jsx",["96","97"],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\CreatePost\\Create.jsx",["98","99"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { Select, useToast } from '@chakra-ui/react'\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport { ActionButton } from '../Reusable/Buttons/Buttons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './Create.css'\r\n\r\nconst CreatePost = () => {\r\n  const history = useHistory()\r\n  const toast = useToast()\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n  const [subreddits, setSubreddits] = useState([])\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [selectedSubreddit, setSelectedSubreddit] = useState('All')\r\n  const [userName, setUserName] = useState(null)\r\n\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    if(currentUser.uid){\r\n\r\n      const formatDetails = await {\r\n        title,\r\n        content ,\r\n        subreddit: selectedSubreddit,\r\n        userName: currentUser.displayName\r\n      }\r\n      \r\n      const response = await axios.post('http://localhost:5000/posts/add', formatDetails)\r\n      history.push(`/post/${response.data.postID}`)\r\n    } else {\r\n      toast({\r\n        title: \"Failed to add post\",\r\n        description: \"You need to create an account to post \",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })\r\n      console.log(\"failed\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchSubreddits = async() => {\r\n      const subreddits = await axios.get('http://localhost:5000/subreddits')\r\n      setSubreddits(subreddits.data.subreddits.map(subreddit => subreddit.subreddit))\r\n    }\r\n\r\n    fetchSubreddits()\r\n  }, [])\r\n  return (\r\n    <section className=\"create\">\r\n      <div className=\"create__container\">\r\n        {currentUser ? (\r\n          <form onSubmit={handleSubmit} className=\"create__form\">\r\n            \r\n            <div className=\"create__input\">\r\n              <input type=\"text\" required value={title} onChange={e => setTitle(e.target.value)}/>\r\n              <label className=\"create__label\">Title</label>\r\n            </div>\r\n            <Select value={selectedSubreddit} onChange={e => setSelectedSubreddit(e.target.value)} variant=\"filled\" bg='#4FD1C5' color=\"black\" _hover={{bg: \"#4FD1C5\"}} _focus={{bg: \"#4FD1C5\"}}>\r\n                {\r\n                  subreddits.map((subreddit) => {\r\n                    return(\r\n                      <option value={subreddit}>{subreddit}</option>\r\n                    )\r\n                  })\r\n                }\r\n              </Select>\r\n            <div className=\"create__input\">\r\n              <textarea type=\"text\" required value={content} onChange={e => setContent(e.target.value)}/>\r\n              <label className=\"create__label\">Text</label>\r\n            </div>\r\n              <ActionButton buttonText=\"Submit\" buttonVariant=\"filled\" buttonColor=\"blue\" buttonSize=\"md\" />\r\n              \r\n          </form>\r\n        ): (\r\n          \r\n          toast({\r\n            title: \"Failed to load component\",\r\n            description: \"You need to create an account to access this component \",\r\n            status: \"error\",\r\n            duration: 2000,\r\n            isClosable: true,\r\n          })\r\n        )}\r\n\r\n\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CreatePost\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\SinglePostPage.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostContent\\PostContent.jsx",["100"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nimport './PostContent.css'\r\nimport LikeButton from '../../Reusable/LikeButton/LikeButton'\r\n\r\nconst SinglePostContent = () => {\r\n  const {postID} = useParams()\r\n  const [username, setUserName] = useState('')\r\n  const [subreddit, setSubreddit] = useState('')\r\n  const [createdAt, setCreatedAt] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n\r\n  \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getPostContent = async() => {\r\n      const postContent = await (await axios.get(`http://localhost:5000/posts/${postID}`))\r\n\r\n      const { subreddit,username,title,content,createdat } = postContent.data.data.post\r\n      setSubreddit(subreddit)\r\n      setUserName(username)\r\n      setTitle(title)\r\n\r\n      setContent(content.replace(/\\n/g, '\\n'))\r\n      setCreatedAt(createdat)\r\n    }\r\n    getPostContent()\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"single-post-content\">\r\n      <div className=\"single-post-content__container\">\r\n        <div className=\"single-post-content__post-details\">\r\n          <h2 className=\"single-post-content__subreddit\">\r\n            TP/{subreddit}\r\n          </h2>\r\n          <h3 className=\"single-post-content__username\">\r\n            By u/{username} {moment(createdAt,'YYYYMMDD').fromNow()}\r\n          </h3>\r\n        </div>\r\n        <div className=\"single-post-content__post-content\">\r\n          <h1 className=\"single-post-content__title\">\r\n            {title}\r\n          </h1>\r\n          <p className=\"single-post-content__para\">\r\n            {content}\r\n          </p>\r\n          <LikeButton postID={postID}/>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SinglePostContent","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostForm\\PostForm.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Login\\Login.jsx",["101"],"import React, { useState, useContext } from 'react'\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport { ActionButton } from '../Reusable/Buttons/Buttons'\r\n\r\nimport '../SignUp/SignUp.css'\r\n\r\nconst Login = () => {\r\n  const { logIn } = useContext(AuthContext)\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n\r\n    const isSuccess = await logIn(email,password)\r\n  }\r\n\r\n  return (\r\n    <section className=\"signup\">\r\n      <div className=\"signup__container\">\r\n        <form onSubmit={handleSubmit} className=\"signup__form\">\r\n\r\n          <div className=\"signup__form__input\">\r\n            <input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} required/>\r\n            <label className=\"signup__form__label\">Email</label>\r\n          </div>\r\n          <div className=\"signup__form__input\">\r\n            <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} required/>\r\n            <label className=\"signup__form__label\">Password</label>\r\n          </div>\r\n          <ActionButton buttonText=\"Submit\" buttonSize=\"lg\" buttonVariant=\"filled\" buttonColor=\"blue\" onSubmit={handleSubmit}/>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostComments\\PostComments.jsx",["102","103"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport Comment from '../../Reusable/Comment/Comment'\r\n\r\nimport './PostComments.css'\r\nimport { CommentContext } from '../../Context/CommentContext'\r\n\r\nconst PostComments = () => {\r\n  const { comments, storeComments } = useContext(CommentContext)\r\n  const { postID } = useParams()\r\n\r\n  // const [comments, setComments] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getComments = async() => {\r\n      const fetchComments = await axios.get(`http://localhost:5000/comments/${postID}`)\r\n      storeComments([...fetchComments.data.data.comments])\r\n    }\r\n    getComments()\r\n  }, [])  \r\n  return (\r\n    <section className=\"post-comments\">\r\n      <div className=\"post-comments__container\">\r\n        <h1 className=\"post-comments__title\">Comments</h1>\r\n        {\r\n          comments.map(comment => {\r\n\r\n            return(\r\n              <Comment key={comment.comment_id} userName={comment.username} createdAt={comment.createdAt} content={comment.content} commentID={comment.comment_id} />\r\n            )\r\n          })\r\n        } \r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PostComments\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Comment\\Comment.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Context\\CommentContext.js",["104","105","106"],"import React,{ createContext, useReducer, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const CommentContext = createContext()\r\n\r\nexport const CommentContextProvider = ({children}) => {\r\n\r\n  const [comments, setComments] = useState([])\r\n\r\n  const deleteComment = async(commentID) => {\r\n    const deleteComment = await axios.delete(`http://localhost:5000/comments/${commentID}`) \r\n    setComments(comments.filter(comment => commentID !== comment.comment_id))\r\n  }\r\n\r\n  const updateComment = async(commentID, content) => {\r\n    const formatted = {\r\n      commentID,\r\n      content\r\n    }\r\n    const updatedComment = await axios.put(`http://localhost:5000/comments/${commentID}`, formatted)\r\n    setComments([...comments, comments.map(comment => comment.comment_id === commentID ? comment.content = content : comment)])\r\n  } \r\n\r\n  const addComment = comment => {\r\n    setComments([comment,...comments])\r\n  }\r\n\r\n  const storeComments = commentsArray => {\r\n    setComments(commentsArray)\r\n  } \r\n\r\n  \r\n\r\n  return(\r\n    <CommentContext.Provider value={\r\n      {\r\n        comments,\r\n        storeComments,\r\n        deleteComment,\r\n        addComment,\r\n        updateComment\r\n      }\r\n    }>\r\n      {children}\r\n    </CommentContext.Provider>\r\n  )\r\n}","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\LikeButton\\LikeButton.jsx",["107","108","109","110"],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SingleSubreddit\\SingleSubreddit.jsx",["111"],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\SubredditAbout\\SubredditAbout.jsx",["112","113","114"],{"ruleId":"115","severity":1,"message":"116","line":5,"column":10,"nodeType":"117","messageId":"118","endLine":5,"endColumn":24},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"115","severity":1,"message":"123","line":19,"column":10,"nodeType":"117","messageId":"118","endLine":19,"endColumn":28},{"ruleId":"115","severity":1,"message":"124","line":19,"column":30,"nodeType":"117","messageId":"118","endLine":19,"endColumn":51},{"ruleId":"115","severity":1,"message":"125","line":4,"column":7,"nodeType":"117","messageId":"118","endLine":4,"endColumn":10},{"ruleId":"115","severity":1,"message":"126","line":15,"column":13,"nodeType":"117","messageId":"118","endLine":15,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":20,"column":6,"nodeType":"129","endLine":20,"endColumn":8,"suggestions":"130"},{"ruleId":"115","severity":1,"message":"131","line":19,"column":10,"nodeType":"117","messageId":"118","endLine":19,"endColumn":18},{"ruleId":"115","severity":1,"message":"132","line":19,"column":20,"nodeType":"117","messageId":"118","endLine":19,"endColumn":31},{"ruleId":"127","severity":1,"message":"133","line":34,"column":6,"nodeType":"129","endLine":34,"endColumn":8,"suggestions":"134"},{"ruleId":"115","severity":1,"message":"135","line":17,"column":11,"nodeType":"117","messageId":"118","endLine":17,"endColumn":20},{"ruleId":"115","severity":1,"message":"136","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"137","line":21,"column":6,"nodeType":"129","endLine":21,"endColumn":8,"suggestions":"138"},{"ruleId":"115","severity":1,"message":"139","line":1,"column":31,"nodeType":"117","messageId":"118","endLine":1,"endColumn":41},{"ruleId":"115","severity":1,"message":"140","line":11,"column":11,"nodeType":"117","messageId":"118","endLine":11,"endColumn":24},{"ruleId":"115","severity":1,"message":"141","line":20,"column":11,"nodeType":"117","messageId":"118","endLine":20,"endColumn":25},{"ruleId":"115","severity":1,"message":"142","line":4,"column":10,"nodeType":"117","messageId":"118","endLine":4,"endColumn":17},{"ruleId":"115","severity":1,"message":"143","line":4,"column":19,"nodeType":"117","messageId":"118","endLine":4,"endColumn":30},{"ruleId":"115","severity":1,"message":"131","line":45,"column":11,"nodeType":"117","messageId":"118","endLine":45,"endColumn":19},{"ruleId":"127","severity":1,"message":"144","line":66,"column":6,"nodeType":"129","endLine":66,"endColumn":8,"suggestions":"145"},{"ruleId":"127","severity":1,"message":"146","line":29,"column":6,"nodeType":"129","endLine":29,"endColumn":8,"suggestions":"147"},{"ruleId":"115","severity":1,"message":"148","line":22,"column":11,"nodeType":"117","messageId":"118","endLine":22,"endColumn":17},{"ruleId":"115","severity":1,"message":"149","line":31,"column":11,"nodeType":"117","messageId":"118","endLine":31,"endColumn":19},{"ruleId":"127","severity":1,"message":"146","line":46,"column":7,"nodeType":"129","endLine":46,"endColumn":9,"suggestions":"150"},"no-unused-vars","'CommentContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"'selectedSubreddits' is assigned a value but never used.","'setSelectedSubreddits' is assigned a value but never used.","'app' is assigned a value but never used.","'comments' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'content' and 'postID'. Either include them or remove the dependency array. If 'setPost' needs the current value of 'content', you can also switch to useReducer instead of useState and read 'content' in the reducer.","ArrayExpression",["153"],"'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postID'. Either include it or remove the dependency array.",["154"],"'isSuccess' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'postID' and 'storeComments'. Either include them or remove the dependency array.",["155"],"'useReducer' is defined but never used.","'deleteComment' is assigned a value but never used.","'updatedComment' is assigned a value but never used.","'BsHeart' is defined but never used.","'BsHeartFill' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'postID'. Either include them or remove the dependency array.",["156"],"React Hook useEffect has a missing dependency: 'subreddit'. Either include it or remove the dependency array.",["157"],"'follow' is assigned a value but never used.","'unfollow' is assigned a value but never used.",["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},"Update the dependencies array to be: [content, postID]",{"range":"170","text":"171"},"Update the dependencies array to be: [postID]",{"range":"172","text":"173"},"Update the dependencies array to be: [postID, storeComments]",{"range":"174","text":"175"},"Update the dependencies array to be: [currentUser, postID]",{"range":"176","text":"177"},"Update the dependencies array to be: [subreddit]",{"range":"178","text":"179"},{"range":"180","text":"179"},[591,593],"[content, postID]",[1005,1007],"[postID]",[711,713],"[postID, storeComments]",[1884,1886],"[currentUser, postID]",[891,893],"[subreddit]",[1424,1426]]