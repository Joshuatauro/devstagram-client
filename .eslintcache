[{"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Navbar\\Navbar.jsx":"3","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Context\\AuthContext.js":"4","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Firebase\\firebase.js":"5","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SignUp\\SignUp.jsx":"6","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Buttons\\Buttons.jsx":"7","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Home\\Home.jsx":"8","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Post\\Post.jsx":"9","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\CreatePost\\Create.jsx":"10","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\SinglePostPage.jsx":"11","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostContent\\PostContent.jsx":"12","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostForm\\PostForm.jsx":"13"},{"size":296,"mtime":1610654274593,"results":"14","hashOfConfig":"15"},{"size":1030,"mtime":1610947200437,"results":"16","hashOfConfig":"15"},{"size":1834,"mtime":1610867921681,"results":"17","hashOfConfig":"15"},{"size":1108,"mtime":1610800541658,"results":"18","hashOfConfig":"15"},{"size":448,"mtime":1610640996657,"results":"19","hashOfConfig":"15"},{"size":1692,"mtime":1610800560486,"results":"20","hashOfConfig":"15"},{"size":696,"mtime":1610688910288,"results":"21","hashOfConfig":"15"},{"size":1438,"mtime":1610731092055,"results":"22","hashOfConfig":"15"},{"size":1312,"mtime":1610945762100,"results":"23","hashOfConfig":"15"},{"size":3292,"mtime":1610946755589,"results":"24","hashOfConfig":"15"},{"size":487,"mtime":1610948251863,"results":"25","hashOfConfig":"15"},{"size":1759,"mtime":1610947076805,"results":"26","hashOfConfig":"15"},{"size":1409,"mtime":1610961443652,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"pzz3eb",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\index.js",[],["62","63"],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\App.js",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Navbar\\Navbar.jsx",["64"],"import React, { useContext, useEffect } from 'react'\r\nimport { LinkButton } from '../Reusable/Buttons/Buttons'\r\nimport {AuthContext} from '../Context/AuthContext'\r\nimport { Link } from 'react-router-dom'\r\nimport { IconButton } from '@chakra-ui/react'\r\n\r\nimport { MdHome, MdSettings } from 'react-icons/md'\r\nimport { IoMdGlobe } from 'react-icons/io'\r\nimport { FaPlus } from 'react-icons/fa'\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n\r\n  const {currentUser} = useContext(AuthContext)\r\n\r\n  return (\r\n    <nav className=\"navbar\" >\r\n      <div className=\"navbar__container\">\r\n        <div className=\"navbar__header\">\r\n          <Link to=\"/\">\r\n            <h1>TheDevstagram</h1>\r\n          </Link>\r\n        </div>\r\n\r\n        {currentUser ? (\r\n            <div className=\"navbar__icons\">\r\n              <Link to=\"/create-post\">\r\n                <IconButton icon={<FaPlus />}  bg={'#4FD1C5'} mx=\"10px\" _hover={{opacity:\"0.85\"}}/>\r\n              </Link>\r\n              <Link to=\"/\">\r\n                <IconButton icon={<IoMdGlobe />}  bg={'#4FD1C5'} _hover={{opacity:\"0.85\"}}/>\r\n              </Link>\r\n              <Link to=\"/feed\">\r\n                <IconButton icon={<MdHome />}  bg={'#4FD1C5'} mx=\"10px\" _hover={{opacity:\"0.85\"}} />\r\n              </Link>\r\n              <Link to=\"/settings\">\r\n                <IconButton icon={<MdSettings />}  bg={'#4FD1C5'} _hover={{opacity:\"0.85\"}} />\r\n              </Link>\r\n            </div>\r\n\r\n          ) : (\r\n            <div className=\"navbar__buttons\">\r\n              <LinkButton buttonText=\"SignUp\" buttonColor=\"blue\" buttonSize=\"md\" buttonVariant=\"filled\" link=\"signup\"/>\r\n              <LinkButton buttonText=\"Login\" buttonColor=\"blue\" buttonSize=\"md\" buttonVariant=\"outlined\" link=\"login\"/>\r\n            </div>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Context\\AuthContext.js",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Firebase\\firebase.js",["65"],"import firebase from 'firebase'\r\nimport 'firebase/auth'\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCxkufqsXB9CDUdwaDgNwbC1LNHqv-b5dw\",\r\n  authDomain: \"memories-fedd4.firebaseapp.com\",\r\n  projectId: \"memories-fedd4\",\r\n  storageBucket: \"memories-fedd4.appspot.com\",\r\n  messagingSenderId: \"73933300893\",\r\n  appId: \"1:73933300893:web:c7c8247b5683d1d4af2074\",\r\n  measurementId: \"G-5MXCFDHY5H\"\r\n});\r\n\r\nexport const auth = firebase.auth()\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SignUp\\SignUp.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Buttons\\Buttons.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Home\\Home.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\Reusable\\Post\\Post.jsx",["66"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Post.css'\r\nimport moment from 'moment'\r\nconst Post = ({postID,username,title,content,likeCount,commentCount,subreddit,createdAt}) => {\r\n\r\n  const [post, setPost] = React.useState('')\r\n\r\n  React.useEffect(() => {\r\n    console.log(content)\r\n    setPost(content.replace(/\\n/g, '\\n'))\r\n    // setPost(content.replace(new RegExp('\\r?\\n','g'), '<br/>'))\r\n  }, [])\r\n  return (\r\n    <article className=\"post\">\r\n      <div className=\"post__container\">\r\n        <div className=\"post__row\">\r\n          <div className=\"post__subreddit\">\r\n            <Link to={`/${subreddit}`}>\r\n              <h1>TD/{subreddit}</h1>\r\n            </Link>\r\n          </div>\r\n          <div className=\"post__user\">\r\n            <Link to={`/user/${username}`}>\r\n              <h3>u/{username} posted this {moment(createdAt,'YYYYMMDD').fromNow()}</h3>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"post__row\">\r\n          <div className=\"post__title\">\r\n            <Link to={`/post/${postID}`}>\r\n              <h1>{title}</h1>\r\n            </Link>\r\n          </div>\r\n          <div className=\"post__content\">\r\n            <p>{post}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Post\r\n",["67","68"],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\CreatePost\\Create.jsx",["69","70"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport axios from 'axios'\r\nimport { Select, useToast } from '@chakra-ui/react'\r\nimport { AuthContext } from '../Context/AuthContext'\r\nimport { ActionButton } from '../Reusable/Buttons/Buttons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './Create.css'\r\n\r\nconst CreatePost = () => {\r\n  const history = useHistory()\r\n  const toast = useToast()\r\n  const { currentUser } = useContext(AuthContext)\r\n\r\n  const [subreddits, setSubreddits] = useState([])\r\n\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [selectedSubreddit, setSelectedSubreddit] = useState('All')\r\n  const [userName, setUserName] = useState(null)\r\n\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    if(currentUser.uid){\r\n\r\n      const formatDetails = await {\r\n        title,\r\n        content ,\r\n        subreddit: selectedSubreddit,\r\n        userName: currentUser.displayName\r\n      }\r\n      \r\n      const response = await axios.post('http://localhost:5000/posts/add', formatDetails)\r\n      history.push(`/post/${response.data.postID}`)\r\n    } else {\r\n      toast({\r\n        title: \"Failed to add post\",\r\n        description: \"You need to create an account to post \",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })\r\n      console.log(\"failed\")\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchSubreddits = async() => {\r\n      const subreddits = await axios.get('http://localhost:5000/subreddits')\r\n      setSubreddits(subreddits.data.subreddits.map(subreddit => subreddit.subreddit))\r\n    }\r\n\r\n    fetchSubreddits()\r\n  }, [])\r\n  return (\r\n    <section className=\"create\">\r\n      <div className=\"create__container\">\r\n        {currentUser ? (\r\n          <form onSubmit={handleSubmit} className=\"create__form\">\r\n            \r\n            <div className=\"create__input\">\r\n              <input type=\"text\" required value={title} onChange={e => setTitle(e.target.value)}/>\r\n              <label className=\"create__label\">Title</label>\r\n            </div>\r\n            <Select value={selectedSubreddit} onChange={e => setSelectedSubreddit(e.target.value)} variant=\"filled\" bg='#4FD1C5' color=\"black\" _hover={{bg: \"#4FD1C5\"}} _focus={{bg: \"#4FD1C5\"}}>\r\n                {\r\n                  subreddits.map((subreddit) => {\r\n                    return(\r\n                      <option value={subreddit}>{subreddit}</option>\r\n                    )\r\n                  })\r\n                }\r\n              </Select>\r\n            <div className=\"create__input\">\r\n              <textarea type=\"text\" required value={content} onChange={e => setContent(e.target.value)}/>\r\n              <label className=\"create__label\">Text</label>\r\n            </div>\r\n              <ActionButton buttonText=\"Submit\" buttonVariant=\"filled\" buttonColor=\"blue\" buttonSize=\"md\" />\r\n              \r\n          </form>\r\n        ): (\r\n          \r\n          toast({\r\n            title: \"Failed to load component\",\r\n            description: \"You need to create an account to access this component \",\r\n            status: \"error\",\r\n            duration: 2000,\r\n            isClosable: true,\r\n          })\r\n        )}\r\n\r\n\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CreatePost\r\n","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\SinglePostPage.jsx",[],"C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostContent\\PostContent.jsx",["71"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nimport './PostContent.css'\r\n\r\nconst SinglePostContent = () => {\r\n  const {postID} = useParams()\r\n  const [username, setUserName] = useState('')\r\n  const [subreddit, setSubreddit] = useState('')\r\n  const [createdAt, setCreatedAt] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n\r\n  \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const getPostContent = async() => {\r\n      const postContent = await (await axios.get(`http://localhost:5000/posts/${postID}`)).data\r\n      console.log(postContent.data)\r\n      const { subreddit,username,title,content,createdat } = postContent.data.post\r\n      setSubreddit(subreddit)\r\n      setUserName(username)\r\n      setTitle(title)\r\n\r\n      setContent(content.replace(/\\n/g, '\\n'))\r\n      setCreatedAt(createdat)\r\n    }\r\n    getPostContent()\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"single-post-content\">\r\n      <div className=\"single-post-content__container\">\r\n        <div className=\"single-post-content__post-details\">\r\n          <h2 className=\"single-post-content__subreddit\">\r\n            TP/{subreddit}\r\n          </h2>\r\n          <h3 className=\"single-post-content__username\">\r\n            By u/{username} {moment(createdAt,'YYYYMMDD').fromNow()}\r\n          </h3>\r\n        </div>\r\n        <div className=\"single-post-content__post-content\">\r\n          <h1 className=\"single-post-content__title\">\r\n            {title}\r\n          </h1>\r\n          <p className=\"single-post-content__para\">\r\n            {content}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SinglePostContent","C:\\Users\\Lenovo\\Desktop\\PERN-SOCIAL-MEDIA\\client\\src\\Components\\SinglePost\\PostForm\\PostForm.jsx",["72"],"import React, {useState, useContext} from 'react'\r\nimport axios from 'axios'\r\nimport {AuthContext} from '../../Context/AuthContext'\r\nimport './PostForm.css'\r\nimport { ActionButton } from '../../Reusable/Buttons/Buttons'\r\nimport {useToast} from '@chakra-ui/react'\r\nconst PostForm = () => {\r\n\r\n  const toast = useToast()\r\n  const { currentUser } = useContext(AuthContext)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const handleCommentSubmit = e => {\r\n    e.preventDefault()\r\n    if(currentUser){\r\n\r\n      const formattedDetails = {\r\n        username: currentUser.displayName\r\n      }\r\n      axios.post('http://localhost:5000/comments/add')\r\n    } else {\r\n      toast({\r\n        title: \"Failed to add comment\",\r\n        description: \"You need to create an account to comment\",\r\n        status: \"error\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form className=\"post-form\" onSubmit={handleCommentSubmit}>\r\n      <div className=\"post-form__container\">\r\n        <textarea name=\"comment\" className=\"post-form__textarea\" value={comment} onChange={e => setComment(e.target.value)} required/>\r\n        <label className=\"post-form__label\">Comment</label>   \r\n        <ActionButton buttonColor=\"blue\" buttonSize=\"lg\" buttonText=\"Submit\" buttonVariant=\"filled\" onClick={handleCommentSubmit} />     \r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PostForm",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":29,"nodeType":"79","messageId":"80","endLine":1,"endColumn":38},{"ruleId":"77","severity":1,"message":"81","line":4,"column":7,"nodeType":"79","messageId":"80","endLine":4,"endColumn":10},{"ruleId":"82","severity":1,"message":"83","line":13,"column":6,"nodeType":"84","endLine":13,"endColumn":8,"suggestions":"85"},{"ruleId":"73","replacedBy":"86"},{"ruleId":"75","replacedBy":"87"},{"ruleId":"77","severity":1,"message":"88","line":19,"column":10,"nodeType":"79","messageId":"80","endLine":19,"endColumn":18},{"ruleId":"77","severity":1,"message":"89","line":19,"column":20,"nodeType":"79","messageId":"80","endLine":19,"endColumn":31},{"ruleId":"82","severity":1,"message":"90","line":33,"column":6,"nodeType":"84","endLine":33,"endColumn":8,"suggestions":"91"},{"ruleId":"77","severity":1,"message":"92","line":17,"column":13,"nodeType":"79","messageId":"80","endLine":17,"endColumn":29},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'app' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'content'. Either include it or remove the dependency array. If 'setPost' needs the current value of 'content', you can also switch to useReducer instead of useState and read 'content' in the reducer.","ArrayExpression",["95"],["93"],["94"],"'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'postID'. Either include it or remove the dependency array.",["96"],"'formattedDetails' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [content]",{"range":"101","text":"102"},"Update the dependencies array to be: [postID]",{"range":"103","text":"104"},[432,434],"[content]",[977,979],"[postID]"]